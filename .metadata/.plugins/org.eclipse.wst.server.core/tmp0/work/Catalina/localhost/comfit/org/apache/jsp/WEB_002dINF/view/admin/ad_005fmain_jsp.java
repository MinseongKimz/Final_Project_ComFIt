/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2022-06-16 05:25:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ad_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1654491837648L));
    _jspx_dependants.put("jar:file:/C:/Final_Project_ComFIt/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/comfit/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- http://bootstrapk.com/components/ \r\n");
      out.write("여기서 아이콘을 따오든지 이미지를 따오든지 하기\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<!-- 기기별 크기 담당 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<!-- 폰트 -->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Black+Han+Sans&family=Noto+Sans+KR:wght@100;400&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<title>ad_main.jsp</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("h3 {font-family: 'Black Han Sans', sans-serif;}\r\n");
      out.write("\r\n");
      out.write(".social-box .box {\r\n");
      out.write("    background: white;\r\n");
      out.write("    border-radius: 10px; \r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    margin: 20px 0;\r\n");
      out.write("    padding: 40px 10px;\r\n");
      out.write("    transition: all 0.5s ease-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-box .box:hover {\r\n");
      out.write("   box-shadow: 0 0 6px gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-box .box-text {\r\n");
      out.write("\tborder: 1px;\r\n");
      out.write("    font-size: 15px;\r\n");
      out.write("    line-height: 30px;\r\n");
      out.write("    margin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-box .box-btn a {\r\n");
      out.write("    color: #4183D7;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-box .fa {\r\n");
      out.write("    color: #4183D7;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body class=\"pl-5\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"\">\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"margin-left: 260px\">\r\n");
      out.write("     \t<h1><b><span style=\"color: #0080FF;\">MAIN</span></b></h1>\r\n");
      out.write("</div>     \t\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"margin-left: 250px\">\r\n");
      out.write("<div class=\"social-box col-sm-11\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("     \t<div class=\"row\">\r\n");
      out.write("     \t\r\n");
      out.write("\t\t  <div class=\"col-sm-6\"\">\r\n");
      out.write("\t\t    <div class=\"card box\">\r\n");
      out.write("\t\t      <div class=\"card-body\">\r\n");
      out.write("\t\t      <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t        <h3 class=\"card-title\">회원관리</h3>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t      <i class=\"bi bi-emoji-smile\" style=\"font-size: 100px\"></i>  \r\n");
      out.write("\t\t      </div> \r\n");
      out.write("\t\t        <!-- <p class=\"card-text\">회원을 관리하는 창입니다.</p> -->\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  <div class=\"col-sm-6\">\r\n");
      out.write("\t\t    <div class=\"card box\">\r\n");
      out.write("\t\t      <div class=\"card-body\">\r\n");
      out.write("\t\t\t  <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t        <h3 class=\"card-title\">거래관리</h3>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t      <i class=\"bi bi-cart2\" style=\"font-size: 100px\"></i>  \r\n");
      out.write("\t\t      </div> \r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     \t<div class=\"row\">  \t\r\n");
      out.write("\t\t  <div class=\"col-sm-6\">\r\n");
      out.write("\t\t    <div class=\"card box\">\r\n");
      out.write("\t\t      <div class=\"card-body\" onclick=\"location.href='admin_category_list.action'\">\r\n");
      out.write("\t\t\t  <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t        <h3 class=\"card-title\">카테고리 관리</h3>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t      <i class=\"bi bi-card-checklist\" style=\"font-size: 100px\"></i>  \r\n");
      out.write("\t\t      </div> \r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  <div class=\"col-sm-6\">\r\n");
      out.write("\t\t    <div class=\"card box\">\r\n");
      out.write("\t\t      <div class=\"card-body\">\r\n");
      out.write("\t\t\t  <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t        <h3 class=\"card-title\">고객센터</h3>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      <div class=\"\" style=\"text-align: center;\">\r\n");
      out.write("\t\t      <i class=\"bi bi-chat-left-quote-fill\" style=\"font-size: 100px\"></i>  \r\n");
      out.write("\t\t      </div> \r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /WEB-INF/view/admin/ad_main.jsp(65,1) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("ad_Header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }
}
