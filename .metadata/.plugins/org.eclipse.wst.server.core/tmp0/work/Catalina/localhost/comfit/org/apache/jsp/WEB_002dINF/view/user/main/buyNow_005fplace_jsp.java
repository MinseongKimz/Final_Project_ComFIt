/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2022-06-19 05:09:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.user.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class buyNow_005fplace_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1654491837648L));
    _jspx_dependants.put("jar:file:/C:/Final_Project_ComFIt/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/comfit/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>즉시구매</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("<!-- CSS only -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .map_wrap {position:relative;width:100%;height:350px;}\r\n");
      out.write("    .title {font-weight:bold;display:block; font-size: 10px;}\r\n");
      out.write("    .hAddr {position:absolute;left:10px;top:10px; font-size: 10px; border-radius: 2px;background:#fff;background:rgba(255,255,255,0.8);z-index:1;padding:5px;}\r\n");
      out.write("    #centerAddr {display:block;margin-top:2px;font-weight: normal;}\r\n");
      out.write("    .bAddr {padding:5px;text-overflow: ellipsis;overflow: hidden;white-space: nowrap; font-size: 3px;}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\" integrity=\"sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js\" integrity=\"sha512-uto9mlQzrs59VwILcLiRYeLKPPbS/bT71da/OEBYEwcdNUk8jYIy+D176RYoop1Da+f9mvkYrmj5MCLZWEtQuA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css\" integrity=\"sha512-aOG0c6nPNzGk+5zjwyJaoRUgCdOrfSDhmMID2u4+OIslr0GjpLKo7Xm0Ao3xmpM4T8AmIouRkqwj1nrdVsLKEQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    function buy()\r\n");
      out.write("   {\r\n");
      out.write("\t\tvar price = document.getElementById(\"price\").value;\r\n");
      out.write("\t\talert(price);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar address = document.getElementById(\"address\").value;\r\n");
      out.write("\t\talert(address);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar addr_detail = document.getElementById(\"addr_detail\").value;\r\n");
      out.write("\t\talert(addr_detail);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar u_id = document.getElementById(\"bidding\").value;\r\n");
      out.write("\t\talert(u_id);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar pd_id = document.getElementById(\"pd_id\").value;\r\n");
      out.write("\t\talert(pd_id);\r\n");
      out.write("\t\t \r\n");
      out.write("\t\tvar url = \"price=\" + price + \"&address=\" + address\r\n");
      out.write("\t\t\t\t+ \"&addr_detail=\" + addr_detail + \"&u_id=\"+u_id + \"&pd_id=\" +pd_id;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlocation.href = \"buy.action?\" + url;\r\n");
      out.write("\t\t\r\n");
      out.write(" \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("       function searchAddr()\r\n");
      out.write("       {\r\n");
      out.write("          new daum.Postcode({\r\n");
      out.write("             \r\n");
      out.write("               oncomplete: function(data) {\r\n");
      out.write("                   // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.\r\n");
      out.write("                   // 예제를 참고하여 다양한 활용법을 확인해 보세요.\r\n");
      out.write("                   //alert(data); //[Object]\r\n");
      out.write("                   \r\n");
      out.write("                   var fullRoadAddr = data.roadAddress;   // 도로명 주소 변수\r\n");
      out.write("                   var extraRoadAddr = '';\r\n");
      out.write("                   \r\n");
      out.write("                 // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                 // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                   if(data.bname !== '' && /[동|로|가]$/g.test(data.bname))\r\n");
      out.write("                   {\r\n");
      out.write("                         extraRoadAddr += data.bname;\r\n");
      out.write("                   }\r\n");
      out.write("                     // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                   if(data.buildingName !== '' && data.apartment == 'Y')\r\n");
      out.write("                   {\r\n");
      out.write("                         extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                   }\r\n");
      out.write("                   // 도로명, 지번 조합형 주소가 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                   if(extraRoadAddr !== '')\r\n");
      out.write("                   {\r\n");
      out.write("                       extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                   }\r\n");
      out.write("                   // 도로명, 지번 주소의 유무에 따라 해당 조합형 주소를 추가한다.\r\n");
      out.write("                   if(fullRoadAddr !== '')\r\n");
      out.write("                   {\r\n");
      out.write("                       fullRoadAddr += extraRoadAddr;\r\n");
      out.write("                   }\r\n");
      out.write("                   \r\n");
      out.write("                   alert(fullRoadAddr);\r\n");
      out.write("                   document.getElementById('address').value = fullRoadAddr;\r\n");
      out.write("                   \r\n");
      out.write("               }\r\n");
      out.write("           }).open({\r\n");
      out.write("              /* popupKey : 'popup1'   // 팝업창 key 설정 */\r\n");
      out.write("           });   \r\n");
      out.write("       }\r\n");
      out.write("             \r\n");
      out.write("    \r\n");
      out.write("/*    \r\n");
      out.write("      .on('changeDate', function (e) {\r\n");
      out.write("         //show : datePicker가 보이는 순간 호출\r\n");
      out.write("         //hide : datePicker가 숨겨지는 순간 호출\r\n");
      out.write("         //clearDate: clear 버튼 누르면 호출\r\n");
      out.write("         //changeDate : 사용자가 클릭해서 날짜가 변경되면 호출 (개인적으로 가장 많이 사용함)\r\n");
      out.write("         //changeMonth : 월이 변경되면 호출\r\n");
      out.write("         //changeYear : 년이 변경되는 호출\r\n");
      out.write("         //changeCentury : 한 세기가 변경되면 호출 ex) 20세기에서 21세기가 되는 순간\r\n");
      out.write(" \r\n");
      out.write("         console.log(e);\r\n");
      out.write("         // e.date를 찍어보면 Thu Jun 27 2019 00:00:00 GMT+0900 (한국 표준시) 위와 같은 형태로 보인다.\r\n");
      out.write("      }); */\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("\t<input type=\"hidden\" id=\"pd_id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pd_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\t<div>\r\n");
      out.write("\t   <table class=\"table table-borderless\" style=\"width: 500px;\">\r\n");
      out.write("  \t\t\t<tr>\r\n");
      out.write("  \t\t\t\t<th>\r\n");
      out.write("  \t\t\t\t\t<label for=\"addr1\">배송주소지</label>\t\t\r\n");
      out.write("  \t\t\t\t</th>\r\n");
      out.write("  \t\t\t\t<td colspan=\"2\">\r\n");
      out.write("  \t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"address\" name=\"address\" placeholder=\"클릭해주세요\" required=\"required\" readonly=\"readonly\" onclick=\"searchAddr()\"\r\n");
      out.write("  \t\t\t\t\t style=\"width: 300px; height: 35px; text-align: center;\" />\t\t\r\n");
      out.write("  \t\t\t\t</td>\r\n");
      out.write("  \t\t\t</tr>\r\n");
      out.write("  \t\t\t<tr>\r\n");
      out.write("  \t\t\t\t<th>\r\n");
      out.write("  \t\t\t\t     <label for=\"addr2\">장소상세</label>\r\n");
      out.write("  \t\t\t\t</th>\r\n");
      out.write("  \t\t\t\t<td colspan=\"2\">\r\n");
      out.write("  \t\t\t\t     <input type=\"text\" class=\"form-control\" name=\"addr_detail\" id=\"addr_detail\" style=\"width: 300px; height: 35px;\"\r\n");
      out.write("  \t\t\t\t     required=\"required\"/>\r\n");
      out.write("  \t\t\t\t</td>\r\n");
      out.write("  \t\t\t</tr>\r\n");
      out.write("  \t\t\t<tr>\r\n");
      out.write("  \t\t\t\t<th>\r\n");
      out.write("  \t\t\t\t\t <label for=\"hope_price\">즉시구매가</label>\r\n");
      out.write("  \t\t\t\t</th>\r\n");
      out.write("  \t\t\t\t<td colspan=\"2\">\r\n");
      out.write(" \t\t\t\t      <input type=\"text\" class=\"form-control\" id=\"price\" style=\"width: 300px; height: 35px;\" readonly=\"readonly\"\r\n");
      out.write(" \t\t\t\t      value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imdPrice }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("  \t\t\t\t</td>\r\n");
      out.write("  \t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\r\n");
      out.write("       ");
      out.write("\r\n");
      out.write("        <button type=\"button\" id=\"bidding\" class=\"btn btn-primary\" style=\"width: 150px; height: 35px; margin-left: 20%;\"\r\n");
      out.write("        \tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${u_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" onclick=\"buy()\">즉시구매하기</button>\r\n");
      out.write("       <button type=\"reset\" class=\"btn btn-secondary\" style=\"width: 150px; height: 35px;\">취소</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
