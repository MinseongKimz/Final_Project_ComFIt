/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2022-06-10 06:29:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_005fsearch_005fproduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Final_Project_ComFIt/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/comfit/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1654491837648L));
    _jspx_dependants.put("jar:file:/C:/Final_Project_ComFIt/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/comfit/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   request.setCharacterEncoding("UTF-8");
   String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>user_search_product.jsp</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/user_search_product.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("\t.title\r\n");
      out.write("\t{\r\n");
      out.write("\t\tfont-size: 25pt;\r\n");
      out.write("\t\tfont-weight: bold;\r\n");
      out.write("\t\tmargin-left: 25%;\r\n");
      out.write("\t\tmargin-top:10%;\r\n");
      out.write("\t}\r\n");
      out.write("\t.input_text\r\n");
      out.write("\t{\r\n");
      out.write("\t\tmargin-left:25%;\r\n");
      out.write("\t\twidth: 200pt;\r\n");
      out.write("\t\tfont-size:15pt;\r\n");
      out.write("\t\theight:30pt;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.btn1\r\n");
      out.write("\t{\r\n");
      out.write("\t\tbackground-color:#B2D7FC;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\theight:30pt;\r\n");
      out.write("\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.btn\r\n");
      out.write("\t{\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\theight:30pt;\r\n");
      out.write("\t}\r\n");
      out.write("\t.btn:hover,.btn1:hover\r\n");
      out.write("\t{\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t}\r\n");
      out.write("\t.chucheon\r\n");
      out.write("\t{\r\n");
      out.write("\t\tmargin-left:25%;\r\n");
      out.write("\t}\r\n");
      out.write("\t.describe\r\n");
      out.write("\t{\r\n");
      out.write("\t\tmargin-left:25%;\r\n");
      out.write("\t\tfont-weight: bolder;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t$(function()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t$(\"#loadBtn\").click(function()\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tvar name = $(\"#name\").val();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$.get(\"search.action\", {name : name}, function(result)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tvar searchXml = $.parseXML(result); // 텍스트로 받아온걸 XML 로 다시 변환;\r\n");
      out.write("\t\t\t\t\tvar txt = \"\";\r\n");
      out.write("\t\t\t\t\tvar priceArr \r\n");
      out.write("\t\t\t\t\tvar arr = []; \r\n");
      out.write("\t\t\t\t\tvar tprice = 0;  // 검색 결과 나온 물품들의 누적 합 \r\n");
      out.write("\t\t\t\t\t$(searchXml).find('item').each(function(index) // 각 상품은 <item> 태그로 묶여있다.\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tvar name = $(this).find('title').text(); // 타이틀 : 물건 이름\r\n");
      out.write("\t\t\t\t\t\tvar price = $(this).find('lprice').text();\t// lprice : 각 항목의 최저가 → 최고가는 안나오는듯..?\r\n");
      out.write("\t\t\t\t\t\tvar image = $(this).find('image').text();\t// image : 각 항목의 사진 \r\n");
      out.write("\t\t\t\t\t\tvar category1 = $(this).find('category1').text();\r\n");
      out.write("\t\t\t\t\t\tvar category2 = $(this).find('category2').text();\r\n");
      out.write("\t\t\t\t\t\tvar category3 = $(this).find('category3').text();\r\n");
      out.write("\t\t\t\t\t\tvar category4 = $(this).find('category4').text();\r\n");
      out.write("\t\t\t\t\t\tvar maker = $(this).find('maker').text();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif (maker!=\"\")\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\ttxt += \"<img class='image' src='\" + image +\"' >\"+\"<p>\" + name + \" 최소가 : [\" + price + \"]<br> 카테고리 : \"\r\n");
      out.write("\t\t\t\t\t\t\t  +\"/\"+ category1 +\"/\"+ category2 + \"/\"+category3 +\"/[\"+ maker +\"]<input type='checkbox'></p><br>\";\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tarr[index] = Number(price);\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < arr.length; i++)\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\ttprice += Number(arr[i]); // 누적 실행\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar avgPrice = (tprice/arr.length)  // 누적합 / 물품갯수\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < arr.length; i++)\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tif (arr[i] < (avgPrice * 1.1 ) && arr[i] > (avgPrice * 0.98)) // 물품중에 평균 가격 범위안에 들어왔다면\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tarr.splice(i, 1);\r\n");
      out.write("\t\t\t\t\t\t\ti--;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar tprice2 = 0; // 거른 것들을 누적합 하기위해 만든 변수 \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//alert(arr.length)\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var i=0; i<arr.length; i++)\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\ttprice2 += arr[i]; \r\n");
      out.write("\t\t\t\t\t\tconsole.log(tprice2);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t//console.log(tprice2);\r\n");
      out.write("\t\t\t\t\tvar realAvgPrice = (tprice2/arr.length) * 0.65;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//alert(avgPrice);\r\n");
      out.write("\t\t\t\t\t//alert(realAvgPrice);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif (arr.length==0)\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t$(\"#result\").html(\"<p>검색결과가 없습니다.ㅠ</p>\");\r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t\telse\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tvar txt2 = \"<p class='price'>추천중고가격은 : \" + realAvgPrice + \" 입니다</p>\" \r\n");
      out.write("\t\t\t\t\t\t + \"<p class='caption'>이 가격은 단지 참고용이며 절대적이지 않습니다.<br>제품명을 정확히 적으면 정확도가 올라갑니다.</p>\";\r\n");
      out.write("\t\t\t\t\t\t$(\"#result\").html(txt2 + txt);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#clearBtn\").click(function()\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t$(\"#result\").empty();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"subheader\">\r\n");
      out.write("\t<p class=\"title\">물품 검색</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"outer\">\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<input type = \"text\" class=\"input_text\" name=\"input_text\" placeholder=\"물품을 입력하세요\"/>\r\n");
      out.write("\t\t\t<button class=\"btn1\" id=\"loadBtn\">검색하기</button>\r\n");
      out.write("\t\t\t<button class=\"btn\" type=\"reset\">지우기</button>\r\n");
      out.write("\t\t\t<button class=\"btn\">찾는 물건 없음</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t<div id=\"result\">\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<h3 class=\"chucheon\">Comfit 추천 중고 가격은 test원 입니다.</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"describe\">\r\n");
      out.write("\t\t가격은 참고용이며 절대적이지 않습니다.<br>\r\n");
      out.write("\t\t제품명을 정확히 적으면 정확도가 올라갑니다.\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
