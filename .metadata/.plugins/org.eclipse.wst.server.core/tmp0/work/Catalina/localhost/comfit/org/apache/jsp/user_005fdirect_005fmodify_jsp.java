/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2022-06-13 14:46:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_005fdirect_005fmodify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Final_Project_ComFIt/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/comfit/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1654491837648L));
    _jspx_dependants.put("jar:file:/C:/Final_Project_ComFIt/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/comfit/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   request.setCharacterEncoding("UTF-8");
   String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>판매글 수정-직거래</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(cp );
      out.write("/css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(cp );
      out.write("/css/inputstyle.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\"> \r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(cp );
      out.write("/css/inputstyle.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(cp );
      out.write("/css/jquery-ui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(cp );
      out.write("/css/timepicker.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(cp );
      out.write("/css/timepicker.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css\">\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js\"></script>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("<script src=\"jQuery.MultiFile.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".insert {\r\n");
      out.write("    padding: 20px 30px;\r\n");
      out.write("    display: block;\r\n");
      out.write("    width: 75%;\r\n");
      out.write("    height: 15%;\r\n");
      out.write("    border: 1px solid #dbdbdb;\r\n");
      out.write("    -webkit-box-sizing: border-box;\r\n");
      out.write("    -moz-box-sizing: border-box;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write(".insert .file-list {\r\n");
      out.write("    height: 15%;\r\n");
      out.write("    overflow: auto;\r\n");
      out.write("    border: 1px solid #989898;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("}\r\n");
      out.write(".insert .file-list .filebox p {\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("}\r\n");
      out.write(".insert .file-list .filebox .delete i\r\n");
      out.write("{\r\n");
      out.write("    size:50%;\r\n");
      out.write("    margin-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("   function readURL(input) {\r\n");
      out.write("     if (input.files && input.files[0]) {\r\n");
      out.write("       var reader = new FileReader();\r\n");
      out.write("       reader.onload = function(e) {\r\n");
      out.write("         document.getElementById('preview').src = e.target.result;\r\n");
      out.write("       };\r\n");
      out.write("       reader.readAsDataURL(input.files[0]);\r\n");
      out.write("     } else {\r\n");
      out.write("       document.getElementById('preview').src = \"\";\r\n");
      out.write("     }\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   var fileNo = 0;\r\n");
      out.write("   var filesArr = new Array();\r\n");
      out.write("   /* 첨부파일 추가 */\r\n");
      out.write("   function addFile(obj){\r\n");
      out.write("      var minFileCnt = 6;\r\n");
      out.write("       var maxFileCnt = 10;   // 첨부파일 최대 개수\r\n");
      out.write("       var attFileCnt = document.querySelectorAll('.filebox').length;    // 기존 추가된 첨부파일 개수\r\n");
      out.write("       var remainFileCnt = maxFileCnt - attFileCnt;    // 추가로 첨부가능한 개수\r\n");
      out.write("       var curFileCnt = obj.files.length;  // 현재 선택된 첨부파일 개수\r\n");
      out.write("      \r\n");
      out.write("       \r\n");
      out.write("       // 첨부파일 개수 확인\r\n");
      out.write("       if (curFileCnt > remainFileCnt) {\r\n");
      out.write("           alert(\"첨부파일은 최대 \" + maxFileCnt + \"개 까지 첨부 가능합니다.\");\r\n");
      out.write("       }\r\n");
      out.write("       for (var i = 0; i < Math.min(curFileCnt, remainFileCnt); i++) {\r\n");
      out.write("         \r\n");
      out.write("          \r\n");
      out.write("           const file = obj.files[i];\r\n");
      out.write("         \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           // 첨부파일 검증\r\n");
      out.write("           if (validation(file)) {\r\n");
      out.write("               // 파일 배열에 담기\r\n");
      out.write("               var reader = new FileReader();\r\n");
      out.write("               reader.onload = function () {\r\n");
      out.write("                   filesArr.push(file);\r\n");
      out.write("               };\r\n");
      out.write("               reader.readAsDataURL(file)\r\n");
      out.write("               // 목록 추가\r\n");
      out.write("               let htmlData = '';\r\n");
      out.write("               htmlData += '<div id=\"file' + fileNo + '\" class=\"filebox\">';\r\n");
      out.write("               htmlData += '   <p class=\"name\">' + file.name + '</p>';\r\n");
      out.write("               htmlData += '   <a class=\"delete\" onclick=\"deleteFile(' + fileNo + ');\"><button class=\"btn btn-danger\">취소</button></a>';\r\n");
      out.write("               htmlData += '</div>';\r\n");
      out.write("               $('.file-list').append(htmlData);\r\n");
      out.write("               fileNo++;\r\n");
      out.write("           } else {\r\n");
      out.write("               continue;\r\n");
      out.write("           }\r\n");
      out.write("       }\r\n");
      out.write("       // 초기화\r\n");
      out.write("       document.querySelector(\"input[type=file]\").value = \"\";\r\n");
      out.write("   }\r\n");
      out.write("      /* 첨부파일 검증 */\r\n");
      out.write("      function validation(obj){\r\n");
      out.write("       const fileTypes = ['application/pdf', 'image/gif', 'image/jpeg', 'image/png', 'image/bmp', 'image/tif'];\r\n");
      out.write("       if (obj.name.length > 100) {\r\n");
      out.write("           alert(\"파일명이 100자 이상인 파일은 제외되었습니다.\");\r\n");
      out.write("           return false;\r\n");
      out.write("       } else if (obj.size > (100 * 1024 * 1024)) {\r\n");
      out.write("           alert(\"최대 파일 용량인 100MB를 초과한 파일은 제외되었습니다.\");\r\n");
      out.write("           return false;\r\n");
      out.write("       } else if (obj.name.lastIndexOf('.') == -1) {\r\n");
      out.write("           alert(\"확장자가 없는 파일은 제외되었습니다.\");\r\n");
      out.write("           return false;\r\n");
      out.write("       }else if (!fileTypes.includes(obj.type)) {\r\n");
      out.write("           alert(\"첨부가 불가능한 파일은 제외되었습니다.\");\r\n");
      out.write("           return false;\r\n");
      out.write("       }\r\n");
      out.write("       else {\r\n");
      out.write("           return true;\r\n");
      out.write("       }\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   /* 첨부파일 삭제 */\r\n");
      out.write("   function deleteFile(num) {\r\n");
      out.write("       document.querySelector(\"#file\" + num).remove();\r\n");
      out.write("       filesArr[num].is_delete = true;\r\n");
      out.write("   }\r\n");
      out.write("   /* 폼 전송 */\r\n");
      out.write("   function submitForm() {\r\n");
      out.write("       // 폼데이터 담기\r\n");
      out.write("       var form = document.querySelector(\"form\");\r\n");
      out.write("       var formData = new FormData(form);\r\n");
      out.write("       for (var i = 0; i < filesArr.length; i++) {\r\n");
      out.write("           // 삭제되지 않은 파일만 폼데이터에 담기\r\n");
      out.write("           if (!filesArr[i].is_delete) {\r\n");
      out.write("               formData.append(\"attach_file\", filesArr[i]);\r\n");
      out.write("           }\r\n");
      out.write("       }\r\n");
      out.write("       $.ajax({\r\n");
      out.write("           method: 'POST',\r\n");
      out.write("           url: '/register',\r\n");
      out.write("           dataType: 'json',\r\n");
      out.write("           data: formData,\r\n");
      out.write("           async: true,\r\n");
      out.write("           timeout: 30000,\r\n");
      out.write("           cache: false,\r\n");
      out.write("           headers: {'cache-control': 'no-cache', 'pragma': 'no-cache'},\r\n");
      out.write("           success: function () {\r\n");
      out.write("               alert(\"파일업로드 성공\");\r\n");
      out.write("           },\r\n");
      out.write("           error: function (xhr, desc, err) {\r\n");
      out.write("               alert('에러가 발생 하였습니다.');\r\n");
      out.write("               return;\r\n");
      out.write("           }\r\n");
      out.write("       })\r\n");
      out.write("   }\r\n");
      out.write("      \r\n");
      out.write("   \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <!--Header  -->\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("<!--날짜 처리  -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(cp);
      out.write("/js/jquery-ui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(cp);
      out.write("/js/jquery.timepicker.js.\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(cp);
      out.write("/js/jquery.timepicker.min.js\"></script>\r\n");
      out.write("      \r\n");
      out.write("      <script type=\"text/javascript\">\r\n");
      out.write("   //$();\r\n");
      out.write("   //jquery();\r\n");
      out.write("   $(document).ready(function()\r\n");
      out.write("   {\r\n");
      out.write("      \r\n");
      out.write("      //시작하는 날\r\n");
      out.write("      $(\"#sdate\").datepicker(\r\n");
      out.write("      {\r\n");
      out.write("         \r\n");
      out.write("         dateFormat: \"yy-mm-dd\" \r\n");
      out.write("         ,minDate:0\r\n");
      out.write("         ,maxDate:+3\r\n");
      out.write("         ,onSelect: function(selectedDate) \r\n");
      out.write("         {    \r\n");
      out.write("        \t \tvar sdate = new Date(selectedDate)\r\n");
      out.write("        \t \tsdate.setDate(sdate.getDate() + 1);\r\n");
      out.write("        \t \t\r\n");
      out.write("        \t \tvar edate = new Date(sdate);\r\n");
      out.write("        \t \tedate.setDate(edate.getDate() + 4);\r\n");
      out.write("        \t \t\r\n");
      out.write("        \t    $(\"#edate\").datepicker({ \r\n");
      out.write("        \t          dateFormat: \"yy-mm-dd\" \r\n");
      out.write("        \t          , minDate: sdate\r\n");
      out.write("        \t          , maxDate: edate\r\n");
      out.write("        \t     });\r\n");
      out.write("         } \r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("   \r\n");
      out.write("      //시간 설정\r\n");
      out.write("      $(function() \r\n");
      out.write("      {\r\n");
      out.write("    \t  var today =  new Date();\r\n");
      out.write("         //시작시간\r\n");
      out.write("          $(\"#time1\").timepicker( {\r\n");
      out.write("              timeFormat: 'H:mm p'\r\n");
      out.write("              ,interval:60\r\n");
      out.write("              ,dynamic: false\r\n");
      out.write("              ,startTime: today.getHours() + ':00'\r\n");
      out.write("              ,maxTime: '11:00pm'\r\n");
      out.write("              ,dropdown: true\r\n");
      out.write("              ,scrollbar: true  \r\n");
      out.write("              ,change: function(time)\r\n");
      out.write("\t\t\t{\t\r\n");
      out.write("            \t  var stime = new Date(time);\r\n");
      out.write("            \t  $(\"#time2\").timepicker({\r\n");
      out.write("                      timeFormat: 'H:mm p'\r\n");
      out.write("                      ,interval: 60\r\n");
      out.write("                      ,dynamic: false\r\n");
      out.write("                      ,minTime: (stime.getHours()+1)+ ':00'\r\n");
      out.write("                      ,maxTime : '23:00'\r\n");
      out.write("                      ,dropdown: true\r\n");
      out.write("                      ,scrollbar: true  \r\n");
      out.write("                      \r\n");
      out.write("                  });\r\n");
      out.write("\t\t\t}\r\n");
      out.write("          });\r\n");
      out.write("         //끝나는 시간\r\n");
      out.write("         \r\n");
      out.write("      });\r\n");
      out.write("   })\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("<div class=\"container\" style=\"padding-top: 80px;\">\r\n");
      out.write("   <p class=\"fs-3\" style=\"font-weight: bold;\">\r\n");
      out.write("      판매글 등록-직거래   \r\n");
      out.write("   </p>\r\n");
      out.write("   <div class=\"share\">\r\n");
      out.write("      <table>\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>제목<span class=\"star\">*</span></th>\r\n");
      out.write("            <td colspan=\"3\"><input class=\"form-control\" id=\"exampleFormControlInput1\" type=\"text\" placeholder=\"제목을 입력해주세요.\" style=\"width: 86%; margin-left: 2%;\"/>\r\n");
      out.write("            <p align=\"right\" style=\"font-size: 3px; margin-right: 16%;\">32/32</p>\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>거래 가능 장소<span class=\"star\">*</span></th>\r\n");
      out.write("            <td>\r\n");
      out.write("               <div class=\"input-group mb-5\" style=\"margin-top: 10%;\">\r\n");
      out.write("                 <button class=\"input-group-text\" id=\"basic-addon1\"><i class=\"bi bi-search\"></i></button>\r\n");
      out.write("                 <input type=\"text\" class=\"form-control\" placeholder=\"검색\" style=\"height:40px;\">\r\n");
      out.write("               </div>\r\n");
      out.write("            </td>\r\n");
      out.write("            \r\n");
      out.write("            <!-- 지도 출력 -->\r\n");
      out.write("            \r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>거래 가능 일시<span class=\"star\">*</span>\r\n");
      out.write("            <p style=\"font-weight: normal; font-size: 7pt;\">오늘날짜로 선택이 불가능합니다.\r\n");
      out.write("            \t <br>거래 가능일은 5일입니다.\r\n");
      out.write("                 <br>끝나는 시간은 23:00 PM 까지 입니다.</p>\r\n");
      out.write("                </th>\r\n");
      out.write("                <td>\r\n");
      out.write("                   <div class=\"input-group input-daterange\" >\r\n");
      out.write("                   <input type=\"text\" class=\"startdate\" id=\"sdate\" placeholder=\"시작 날짜\" />\r\n");
      out.write("               \t   </div>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td style=\"width:2%; font-size:80%;\">\r\n");
      out.write("            ▶▶▶\r\n");
      out.write("            </td>\r\n");
      out.write("           \t<td>\r\n");
      out.write("\t               <div class=\"input-group input-daterange\">\r\n");
      out.write("\t                   <input type=\"text\" class=\"enddate\" id=\"edate\"  placeholder=\"끝나는 날짜\"/>\r\n");
      out.write("\t               </div>\r\n");
      out.write("            </td>\r\n");
      out.write("                \r\n");
      out.write("            <td>\r\n");
      out.write("             \t<div class=\"input-group input-daterange\">\r\n");
      out.write("                 <input type=\"text\" class=\"time1\" id=\"time1\" name=\"time1\"placeholder=\"시간을 선택해주세요.\"/>\r\n");
      out.write("             \t</div>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td style=\"width:2%;font-size:80%;\">\r\n");
      out.write("            ▶▶▶\r\n");
      out.write("            </td>\r\n");
      out.write("                <td>\r\n");
      out.write("\t\t\t            <div class=\"input-group input-daterange\">\r\n");
      out.write("\t\t\t            \r\n");
      out.write("\t\t\t                  <input type=\"text\" class=\"time2\" id=\"time2\" name=\"time2\" placeholder=\"시간을 선택해주세요.\"/>\r\n");
      out.write("\t\t\t            </div>\r\n");
      out.write("               </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("         \t<th>물품검색<span class=\"star\">*</span></th>\r\n");
      out.write("         \t  <td>\r\n");
      out.write("               <div class=\"input-group mb-5\" style=\"width: 70%; margin-top: 15%;\">\r\n");
      out.write("                 <button class=\"input-group-text\" id=\"basic-addon1\"><i class=\"bi bi-search\" onclick=\"location.href='searchproduct.action';\"></i></button>\r\n");
      out.write("                 <input type=\"text\" class=\"form-control\" placeholder=\"물품 검색\" style=\"height:40px;\">\r\n");
      out.write("               </div>\r\n");
      out.write("              </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>물품 카테고리<span class=\"star\">*</span>\r\n");
      out.write("             <p style=\"font-weight: normal; font-size: 7pt;\">상품과 일치하는 카테고리를 선택해주세요.\r\n");
      out.write("                 <br>적합하지 않을 경우 운영자에 의해 조정될 수 있습니다.</p>\r\n");
      out.write("                </th>\r\n");
      out.write("            <td width=\"20%;\">\r\n");
      out.write("               <select class=\"form-select\" name=\"category\" style=\"width: 50%; height: 35px; margin-left: 5%;\">\r\n");
      out.write("               <option selected=\"selected\">카테고리</option>\r\n");
      out.write("                     <option value=\"\">CPU</option>\r\n");
      out.write("                     <option value=\"\">쿨러/튜닝</option>\r\n");
      out.write("                     <option value=\"\">메인 보드</option>\r\n");
      out.write("                     <option value=\"\">메모리</option>\r\n");
      out.write("                     <option value=\"\">그래픽 카드</option>\r\n");
      out.write("                     <option value=\"\">HDD/SSD</option>\r\n");
      out.write("                     <option value=\"\">외장 HDD</option>\r\n");
      out.write("                     <option value=\"\">케이스</option>\r\n");
      out.write("                     <option value=\"\">파워</option>\r\n");
      out.write("                     <option value=\"\">키보드/마우스</option>\r\n");
      out.write("                     <option value=\"\">모니터</option>\r\n");
      out.write("                     <option value=\"\">오디오</option>\r\n");
      out.write("               </select>\r\n");
      out.write("               \r\n");
      out.write("               </td>\r\n");
      out.write("            <!-- 공간 맞추기  -->   \r\n");
      out.write("            <td></td>\r\n");
      out.write("            <td>\r\n");
      out.write("               <input type=\"text\" class=\"form-control\" id=\"productName\" placeholder=\"물품명을 입력해 주세요.\" style=\"width: 90%; margin-left: -25%;\"/>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td>   \r\n");
      out.write("               <input type=\"text\" class=\"form-control\" id=\"productMaker\" placeholder=\"제조사를 입력해 주세요.\" style=\"width: 90%;\"/>\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("         \t<tr>\r\n");
      out.write("            \t<!-- 공간맞추기용 th -->\r\n");
      out.write("            \t<th>\r\n");
      out.write("            \t</th>\r\n");
      out.write("         \t</tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>희망 시작 가격<span class=\"star\">*</span>\r\n");
      out.write("             <p style=\"font-weight: normal; font-size: 7pt;\">희망하는 가격을 적어주세요.</p>\r\n");
      out.write("                </th>\r\n");
      out.write("                <td colspan=\"3\"><input class=\"form-control\" id=\"price1\" type=\"text\" placeholder=\"희망 가격을 입력해주세요.\" style=\"width: 86%;\"/>\r\n");
      out.write("                </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("               \r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>물품 사진<span class=\"star\">*</span>\r\n");
      out.write("             <p style=\"font-weight: normal; font-size: 7pt;\">최소 여섯장 이상 등록해 주세요.</p>\r\n");
      out.write("                </th>\r\n");
      out.write("                <td colspan=\"3\">\r\n");
      out.write("                      <div class=\"insert\">\r\n");
      out.write("                   <form method=\"POST\" onsubmit=\"return false;\" enctype=\"multipart/form-data\">\r\n");
      out.write("                      <p style=\"font-weight: normal;\">[ 최소 6장 ~ 최대 10장 ]</p>\r\n");
      out.write("                       <input type=\"file\" onchange=\"addFile(this);\" multiple />\r\n");
      out.write("                       <div class=\"file-list\"  >\r\n");
      out.write("                       </div>\r\n");
      out.write("                   </form>\r\n");
      out.write("                  </div>\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>A/S 가능 여부\r\n");
      out.write("                </th>\r\n");
      out.write("                <td colspan=\"3\">\r\n");
      out.write("                <div class=\"form-check form-check-inline\">\r\n");
      out.write("              <input class=\"form-check-input\" type=\"radio\" name=\"asRadio\" id=\"inlineRadio1\" value=\"유상\" checked=\"checked\">\r\n");
      out.write("              <label class=\"form-check-label\" for=\"inlineRadio1\">유상</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-check form-check-inline\">\r\n");
      out.write("              <input class=\"form-check-input\" type=\"radio\" name=\"asRadio\" id=\"inlineRadio2\" value=\"무상\">\r\n");
      out.write("              <label class=\"form-check-label\" for=\"inlineRadio2\">무상</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-check form-check-inline\">\r\n");
      out.write("              <input class=\"form-check-input\" type=\"radio\" name=\"asRadio\" id=\"inlineRadio3\" value=\"불가능\">\r\n");
      out.write("              <label class=\"form-check-label\" for=\"inlineRadio3\">불가능</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <input class=\"form-control\" id=\"asDate\" type=\"text\" placeholder=\"유효날짜 (연/월/일)\" style=\"width: 86%;\"/>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>\r\n");
      out.write("               <div style=\"background-color: #C9E0F5; height: 70px; padding: 10px; width: 85%;\">\r\n");
      out.write("                  <p style=\"font-size: 9pt;\"> ※ 게시글 유지 기간</p>\r\n");
      out.write("                  <p style=\"font-size: 7pt; font-weight: normal;\">게시글 등록 시간부터 00일까지 유지됩니다.</p>\r\n");
      out.write("               </div>\r\n");
      out.write("            </th>\r\n");
      out.write("            \r\n");
      out.write("            <td colspan=\"3\" rowspan=\"2\">\r\n");
      out.write("            <textarea placeholder=\"코멘트 특이사항\" style=\"width:86%; height: 150px;\"></textarea>\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <th style=\"margin-right: 10%;\">\r\n");
      out.write("               <div style=\"background-color: #C9E0F5; height: 100px; padding: 10px; width: 85%;\">\r\n");
      out.write("                  <p style=\"font-size: 9pt;\"> ※ 코멘트 작성 시 주의사항</p>\r\n");
      out.write("                  <p style=\"font-size: 7pt; font-weight: normal;\">불필요한 개인 정보 노출 및 판매와 관련없는 문구\r\n");
      out.write("                  <br>등록 시 약관에 위배되어 제재될 수 있습니다.</p>\r\n");
      out.write("               </div>\r\n");
      out.write("            </th>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("         <tr>\r\n");
      out.write("            <td colspan=\"4\">\r\n");
      out.write("               <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\" style=\"width: 90%;\">\r\n");
      out.write("                   <button type=\"button\" class=\"btn btn-primary\">등록하기</button>\r\n");
      out.write("                   <button type=\"button\" class=\"btn btn-secondary\">취소</button>\r\n");
      out.write("                   </div>\r\n");
      out.write("                </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         \r\n");
      out.write("      </table>\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   <br />\r\n");
      out.write("   <br />\r\n");
      out.write("   <br />\r\n");
      out.write("   <br />\r\n");
      out.write("   <br />\r\n");
      out.write("   <br />\r\n");
      out.write("   <br />\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"footer\">\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /user_direct_modify.jsp(178,1) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("/WEB-INF/view/user/main/comfit_header_user.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }
}
