SELECT USER
FROM DUAL;
--==>>COMFIT

-- ○ 2022-06-09 17:26 기준
SELECT ROWNUM, TNAME, TABTYPE
FROM TAB;
/*
1	ADMIN	                TABLE
2	ANNOUNCE	            TABLE
3	ANNOUNCE_CATEGORY	    TABLE
4	ASK	                    TABLE
5	ASK_ANSWER	            TABLE
6	ASK_CATEGORY	        TABLE
7	AUTH_CATEGORY   	    TABLE
8	BANK	                TABLE
9	BAN_CATEGORY	        TABLE
10	BID_LIST	            TABLE
11	BID_SUCCESS	            TABLE
12	COMFIT_USER	            TABLE
13	DELIVERY_PD_REPORT	    TABLE
14	DELIVERY_PRODUCT	    TABLE
15	DELIVERY_TA_REPORT	    TABLE
16	DELI_COMPLETE_BUY	    TABLE
17	DELI_COMPLETE_SELL	    TABLE
18	DELI_PD_BANNED	        TABLE
19	DELI_PD_REP_HANDLE	    TABLE
20	DELI_TA_BANNED	        TABLE
21	DELI_TA_REP_HANDLE	    TABLE
22	DIRECT_PD_REPORT	    TABLE
23	DIRECT_PRODUCT	        TABLE
24	DIRECT_TA_REPORT	    TABLE
25	DIRE_COMPLETE_BUY	    TABLE
26	DIRE_COMPLETE_SELL	    TABLE
27	DIRE_PD_BANNED	        TABLE
28	DIRE_PD_REP_HANDLE	    TABLE
29	DIRE_TA_BANNED	        TABLE
30	DIRE_TA_REP_HANDLE	    TABLE
31	FAQ	                    TABLE
32	INPUT_MONEY	            TABLE
33	OUTPUT_MONEY	        TABLE
34	PD_REP_CATEGORY 	    TABLE
35	PRODUCT_AS	            TABLE
36	PRODUCT_CATEGORY    	TABLE
37	PRODUCT_MAKER	        TABLE
38	REPORTER_CATEGORY   	TABLE
39	REP_HANDLE_CATEGORY	    TABLE
40	SELECTED	            TABLE
41	SUGGEST_LIST	        TABLE
42	TRANS_REP_CATEGORY	    TABLE
43	USER_EMAIL_AUTH	        TABLE
44	USER_INFORMATION	    TABLE
45	USER_INFORMATION_BACKUP	TABLE
46	USER_PICK_DELIVERY	    TABLE
47	USER_PICK_DIRECT	    TABLE
*/

SELECT ROWNUM, SEQUENCE_NAME
FROM SEQ;
/*
1	ANNOUNCE_CATEGORY_SEQ   공지사항 카테고리
2	ASK_CATEGORY_SEQ        문의 카테고리
3	AUTH_CATEGORY_SEQ       인증 종류 카테고리
4	BANK_SEQ                은행 카테고리
5	BAN_CATEGORY_SEQ        차단카테고리
6	FAQ_SEQ                 자주묻는질문 카테고리
7	HAN_CATE_SEQ            신고처리 카테고리
8	PRODUCT_AS_SEQ          AS가능여부
9	PRODUCT_CATEGORY_SEQ    상품카테고리
10	P_REP_CATE_SEQ          상품신고사유 카테고리
11	REPORTER_CATE_SEQ       신고자분류
12	T_REP_CATE_SEQ          거래신고사유 카테고리
*/

--------------------------------------------------------------------------------
SELECT USER
FROM DUAL;
--==>> COMFIT

--●------------------1. 신고관련 테이블----------------------●--
-- ○ 신고자종류 테이블 [ REPORTER_CATEGORY ]
CREATE TABLE REPORTER_CATEGORY
( REPORTER_ID       NUMBER  
, REPORTER_PROP     VARCHAR2(20)    NOT NULL
, CONSTRAINT REPORTER_ID_PK PRIMARY KEY(REPORTER_ID)
);
--==>> Table REPORTER_CATEGORY이(가) 생성되었습니다.

-- ○ 신고자종류테이블 시퀀스 [ REPORTER_CATE_SEQ ]
CREATE SEQUENCE REPORTER_CATE_SEQ
NOCACHE;
--==>> Sequence REPORTER_CATE_SEQ이(가) 생성되었습니다.



-- ○ 거래신고사유카테고리 테이블 [ TRANS_REP_CATEGORY ]
CREATE TABLE TRANS_REP_CATEGORY
( TRANS_REP_CID         NUMBER
, REP_CATE_NAME         VARCHAR2(20)    NOT NULL
, CONSTRAINT TRANS_REP_CID_PK PRIMARY KEY(TRANS_REP_CID)
);
--==>> Table TRANS_REP_CATEGORY이(가) 생성되었습니다.

-- ○ 거래신고사유카테고리 테이블 시퀀스 [ T_REP_CATE_SEQ ]
CREATE SEQUENCE T_REP_CATE_SEQ
NOCACHE;
--==>> Sequence T_REP_CATE_SEQ이(가) 생성되었습니다.

-- ○ 택배거래 신고접수 테이블 [ DELIVERY_TA_REPORT ]
CREATE TABLE DELIVERY_TA_REPORT
( REP_ID        VARCHAR2(20)
, REP_CONTENTS  VARCHAR2(2000)  NOT NULL
, REP_DATE      DATE            DEFAULT SYSDATE
, TRANS_REP_CID NUMBER
, BS_ID         VARCHAR2(20)
, REPORTER_ID   NUMBER
, CONSTRAINT REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DELI_TRANS_REP_CID_FK FOREIGN KEY(TRANS_REP_CID)
            REFERENCES TRANS_REP_CATEGORY(TRANS_REP_CID)
, CONSTRAINT DELI_BS_ID_FK FOREIGN KEY(BS_ID)
            REFERENCES BID_SUCCESS(BS_ID)
, CONSTRAINT DELI_REPORTER_ID_FK FOREIGN KEY(REPORTER_ID)
            REFERENCES REPORTER_CATEGORY(REPORTER_ID)
);
--==>> Table DELIVERY_TA_REPORT이(가) 생성되었습니다.

-- ○ 직거래 신고접수 테이블 [ DIRECT_TA_REPORT ]
CREATE TABLE DIRECT_TA_REPORT
( REP_ID              VARCHAR2(20)
, REP_CONTENTS        VARCHAR2(2000)  NOT NULL
, REP_DATE            DATE            DEFAULT SYSDATE
, TRANS_REP_CID       NUMBER
, SELECTED_ID         VARCHAR2(20)
, REPORTER_ID         NUMBER
, CONSTRAINT DIRE_TA_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DIRE_TRANS_REP_CID_FK FOREIGN KEY(TRANS_REP_CID)
            REFERENCES TRANS_REP_CATEGORY(TRANS_REP_CID)
, CONSTRAINT DIRE_SELECTED_ID_FK FOREIGN KEY(SELECTED_ID)
            REFERENCES SELECTED(SELECTED_ID)
, CONSTRAINT DIRE_REPORTER_ID_FK FOREIGN KEY(REPORTER_ID)
            REFERENCES REPORTER_CATEGORY(REPORTER_ID)
);
--==>> Table DIRECT_TA_REPORT이(가) 생성되었습니다.

-- ○ 택배거래 신고처리 테이블 [ DELI_TA_REP_HANDLE ]
CREATE TABLE DELI_TA_REP_HANDLE
( REP_ID        VARCHAR2(20)
, REP_HAN_DATE  DATE            DEFAULT SYSDATE
, AD_ID         VARCHAR2(20)
, HAN_CATE_ID   NUMBER
, CONSTRAINT DELI_TA_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DELI_TA_REP_ID_FK FOREIGN KEY(REP_ID)
            REFERENCES DELIVERY_TA_REPORT(REP_ID)
, CONSTRAINT DELI_TA_AD_ID_FK FOREIGN KEY(AD_ID)
            REFERENCES ADMIN(AD_ID)
, CONSTRAINT DELI_TA_HAN_CATE_ID_FK FOREIGN KEY(HAN_CATE_ID)
            REFERENCES REP_HANDLE_CATEGORY(HAN_CATE_ID)
);
--==>> Table DELI_TA_REP_HANDLE이(가) 생성되었습니다.

-- ○ 직거래 신고처리 테이블 생성 [ DIRE_TA_REP_HANDLE ]
CREATE TABLE DIRE_TA_REP_HANDLE
( REP_ID        VARCHAR2(20)
, REP_HAN_DATE  DATE            DEFAULT SYSDATE
, AD_ID         VARCHAR2(20)
, HAN_CATE_ID   NUMBER
, CONSTRAINT DIRETA_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DIRETA_REP_ID_FK FOREIGN KEY(REP_ID)
            REFERENCES DIRECT_TA_REPORT(REP_ID)
, CONSTRAINT DIRETA_AD_ID_FK FOREIGN KEY(AD_ID)
            REFERENCES ADMIN(AD_ID)
, CONSTRAINT DIRETA_HAN_CATE_ID_FK FOREIGN KEY(HAN_CATE_ID)
            REFERENCES REP_HANDLE_CATEGORY(HAN_CATE_ID)
);
--==>> Table DIRE_TA_REP_HANDLE이(가) 생성되었습니다.


-- ○ 상품신고사유카테고리 테이블 [ PD_REP_CATEGORY ]
CREATE TABLE PD_REP_CATEGORY
( PD_REP_CID       NUMBER
, REP_CATE_NAME    VARCHAR2(20)    NOT NULL
, CONSTRAINT PD_REP_CID_PK PRIMARY KEY(PD_REP_CID)
);
--==>> Table PD_REP_CATEGORY이(가) 생성되었습니다.

-- ○-(1) 상품신고사유카테고리 테이블 시퀀스 [ P_REP_CATE_SEQ ]
CREATE SEQUENCE P_REP_CATE_SEQ
NOCACHE;
--==>> Sequence P_REP_CATE_SEQ이(가) 생성되었습니다.



-- ○ 택배거래상품신고접수 테이블 [ DELIVERY_PD_REPORT ]
CREATE TABLE DELIVERY_PD_REPORT
( REP_ID        VARCHAR2(20)    NOT NULL
, REP_CONTENTS VARCHAR2(2000) NOT NULL
, REP_DATE      DATE            NOT NULL
, U_ID          VARCHAR2(20)    NOT NULL
, PD_REP_CID    NUMBER          NOT NULL
, DELI_PD_ID    VARCHAR2(20)    NOT NULL
, CONSTRAINT DELI_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DELI_PD_U_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT PD_REP_CID_FK FOREIGN KEY(PD_REP_CID)
                REFERENCES PD_REP_CATEGORY(PD_REP_CID)
, CONSTRAINT DELI_PD_ID_FK FOREIGN KEY(DELI_PD_ID)
                REFERENCES DELIVERY_PRODUCT(DELI_PD_ID)
);
--==>> Table DELIVERY_PD_REPORT이(가) 생성되었습니다.

-- ○ 직거래상품신고접수 테이블 [ DIRECT_PD_REPORT ]
CREATE TABLE DIRECT_PD_REPORT
( REP_ID        VARCHAR2(20)    NOT NULL
, REP_CONTENTS VARCHAR2(2000) NOT NULL
, REP_DATE      DATE            NOT NULL
, U_ID          VARCHAR2(20)    NOT NULL
, PD_REP_CID    NUMBER          NOT NULL
, DIRE_PD_ID    VARCHAR2(20)    NOT NULL
, CONSTRAINT DIRE_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DIRE_PD_U_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT DIRE_PD_REP_CID_FK FOREIGN KEY(PD_REP_CID)
                REFERENCES PD_REP_CATEGORY(PD_REP_CID)
, CONSTRAINT DIRE_PD_ID_FK FOREIGN KEY(DIRE_PD_ID)
                REFERENCES DIRECT_PRODUCT(DIRE_PD_ID)
);
--==>> Table DIRECT_PD_REPORT이(가) 생성되었습니다.

--택배거래상품신고처리 테이블 [ DELI_PD_REP_HANDLE ]
CREATE TABLE DELI_PD_REP_HANDLE
( REP_ID            VARCHAR2(20)    NOT NULL
, REP_HAN_DATE      DATE            NOT NULL
, AD_ID             VARCHAR2(20)    NOT NULL
, HAN_CATE_ID       NUMBER          NOT NULL
, CONSTRAINT DELI_HANDLE_REP_ID_FK FOREIGN KEY(REP_ID)
                REFERENCES DELIVERY_PD_REPORT(REP_ID)
, CONSTRAINT DELI_HANDLE_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DELI_HANDLE_ADMIN_ID_FK FOREIGN KEY(AD_ID)
                REFERENCES ADMIN(AD_ID)
, CONSTRAINT DELI_HANDLE_CATE_ID_FK FOREIGN KEY(HAN_CATE_ID)
                REFERENCES REP_HANDLE_CATEGORY(HAN_CATE_ID)
);
--==>> Table DELI_PD_REP_HANDLE이(가) 생성되었습니다.

-- ○ 직거래상품신고처리 테이블 [ DIRE_PD_REP_HANDLE ]
CREATE TABLE DIRE_PD_REP_HANDLE
( REP_ID            VARCHAR2(20)    NOT NULL
, REP_HAN_DATE      DATE            NOT NULL
, AD_ID             VARCHAR2(20)    NOT NULL
, HAN_CATE_ID       NUMBER          NOT NULL
, CONSTRAINT DIRE_HANDLE_REP_ID_FK FOREIGN KEY(REP_ID)
                REFERENCES DIRECT_PD_REPORT(REP_ID)
, CONSTRAINT DIRE_HANDLE_REP_ID_PK PRIMARY KEY(REP_ID)
, CONSTRAINT DIRE_HANDLE_ADMIN_ID_FK FOREIGN KEY(AD_ID)
                REFERENCES ADMIN(AD_ID)
, CONSTRAINT DIRE_HANDLE_CATE_ID_FK FOREIGN KEY(HAN_CATE_ID)
                REFERENCES REP_HANDLE_CATEGORY(HAN_CATE_ID)
);
--==>> Table DIRE_PD_REP_HANDLE이(가) 생성되었습니다.


-- ○ 신고처리분류 테이블 [ REP_HANDLE_CATEGORY ]
CREATE TABLE REP_HANDLE_CATEGORY
( HAN_CATE_ID       NUMBER
, HAN_CATE_NAME     VARCHAR2(20)    NOT NULL
, CONSTRAINT HAN_CATE_ID PRIMARY KEY(HAN_CATE_ID)
);
--==>> Table REP_HANDLE_CATEGORY이(가) 생성되었습니다.

-- ○-(1) 신고처리분류테이블 시퀀스 [ HAN_CATE_SEQ ]
CREATE SEQUENCE HAN_CATE_SEQ
NOCACHE;
--==>> Sequence HAN_CATE_SEQ이(가) 생성되었습니다.
--●------------------==================----------------------●--
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
--●------------------2. 차단관련 테이블----------------------●--

-- ○ 택배거래상품차단등록 테이블 [ DELI_PD_BANNED ]
CREATE TABLE DELI_PD_BANNED
( BAN_ID            VARCHAR2(20)    NOT NULL
, BAN_REA_DETAIL    VARCHAR2(2000)
, BAN_DATE          DATE            NOT NULL
, REP_ID            VARCHAR2(20)    NOT NULL
, BAN_CATE_ID       NUMBER          NOT NULL
, CONSTRAINT DELI_PD_BAN_ID_PK PRIMARY KEY(BAN_ID)
, CONSTRAINT DELI_PD_REP_ID_FK FOREIGN KEY(REP_ID)
                REFERENCES DELI_PD_REP_HANDLE(REP_ID)
, CONSTRAINT DELI_PD_BAN_CATE_ID_FK FOREIGN KEY(BAN_CATE_ID)
                REFERENCES BAN_CATEGORY(BAN_CATE_ID)
);
--==>> Table DELI_PD_BANNED이(가) 생성되었습니다.

-- ○ 직거래상품차단등록 테이블 [ DIRE_PD_BANNED ]
CREATE TABLE DIRE_PD_BANNED
( BAN_ID            VARCHAR2(20)    NOT NULL
, BAN_REA_DETAIL    VARCHAR2(2000)
, BAN_DATE          DATE            NOT NULL
, REP_ID            VARCHAR2(20)    NOT NULL
, BAN_CATE_ID       NUMBER          NOT NULL
, CONSTRAINT DIRE_PD_BAN_ID_PK PRIMARY KEY(BAN_ID)
, CONSTRAINT DIRE_PD_REP_ID_FK FOREIGN KEY(REP_ID)
                REFERENCES DIRE_PD_REP_HANDLE(REP_ID)
, CONSTRAINT DIRE_PD_BAN_CATE_ID_FK FOREIGN KEY(BAN_CATE_ID)
                REFERENCES BAN_CATEGORY(BAN_CATE_ID)
);
--==>> Table DIRE_PD_BANNED이(가) 생성되었습니다.

-- ○ 택배거래 차단등록 테이블 [ DELI_TA_BANNED ]
CREATE TABLE DELI_TA_BANNED
( BAN_ID            VARCHAR2(20)
, BAN_REA_DETAIL    VARCHAR2(2000)  NOT NULL
, BAN_DATE          DATE            DEFAULT SYSDATE
, REP_ID            VARCHAR2(20)
, BAN_CATE_ID       NUMBER
, CONSTRAINT DELI_TA_BAN_ID_PK PRIMARY KEY(BAN_ID)
, CONSTRAINT DELITA_REP_ID_FK FOREIGN KEY(REP_ID)
            REFERENCES DELIVERY_TA_REPORT(REP_ID)
, CONSTRAINT DELI_TA_BAN_CATE_ID FOREIGN KEY(BAN_CATE_ID)
            REFERENCES BAN_CATEGORY(BAN_CATE_ID)
);
--==>> Table DELI_TA_BANNED이(가) 생성되었습니다.

-- ○ 직거래 차단등록 테이블 생성 [ DIRE_TA_BANNED ]
CREATE TABLE DIRE_TA_BANNED
( BAN_ID            VARCHAR2(20)
, BAN_REA_DETAIL    VARCHAR2(2000)  NOT NULL
, BAN_DATE          DATE            DEFAULT SYSDATE
, REP_ID            VARCHAR2(20)
, BAN_CATE_ID       NUMBER
, CONSTRAINT DIRE_TA_BAN_ID_PK PRIMARY KEY(BAN_ID)
, CONSTRAINT DIRE__TA_REP_ID_FK FOREIGN KEY(REP_ID)
            REFERENCES DIRECT_TA_REPORT(REP_ID)
, CONSTRAINT DIRE_TA_BAN_CATE_ID FOREIGN KEY(BAN_CATE_ID)
            REFERENCES BAN_CATEGORY(BAN_CATE_ID)
);
--==>> Table DIRE_TA_BANNED이(가) 생성되었습니다.

--●------------------==================----------------------●--
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
--●------------------3. 회원관련 테이블----------------------●--

-- ○ 회원 테이블 [ COMFIT_USER ]
CREATE TABLE COMFIT_USER
( U_ID  VARCHAR2(20)
, CONSTRAINT U_ID_PK PRIMARY KEY(U_ID)
);
--==>> Table COMFIT_USER이(가) 생성되었습니다.


-- ○ 회원개인정보 테이블 [ USER_INFORMATION ]
CREATE TABLE USER_INFORMATION
( U_EMAIL   VARCHAR2(40)    NOT NULL
, U_NAME    VARCHAR2(20)    NOT NULL
, U_ADDRESS VARCHAR2(100)   NOT NULL
, U_PASSWORD VARCHAR2(20)   NOT NULL
, U_TEL     CHAR(13)        NOT NULL
, U_PROFILE VARCHAR2(200)
, U_NICKNAME VARCHAR2(20)   NOT NULL
, U_JOINDATE DATE           NOT NULL
, U_ID      VARCHAR2(20)
, CONSTRAINT U_INFO_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT U_INFO_EMAIL_PK PRIMARY KEY(U_EMAIL)
, CONSTRAINT U_INFO_NICKNAME_UK UNIQUE(U_NICKNAME)
);
--==>> Table USER_INFORMATION이(가) 생성되었습니다.


-- ○ 탈퇴회원정보백업 테이블 [ USER_INFORMATION_BACKUP ]
CREATE TABLE USER_INFORMATION_BACKUP
( U_EMAIL   VARCHAR2(40)    NOT NULL
, U_NAME    VARCHAR2(20)    NOT NULL
, U_ADDRESS VARCHAR2(100)   NOT NULL
, U_PASSWORD VARCHAR2(20)   NOT NULL
, U_TEL     CHAR(13)        NOT NULL
, U_PROFILE VARCHAR2(200)
, U_NICKNAME VARCHAR2(20)   NOT NULL
, U_JOINDATE DATE           NOT NULL
, U_EXITDATE DATE           NOT NULL
, U_ID      VARCHAR2(20)
, CONSTRAINT U_INFO_BACKUP_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT U_INFO_BACKUP_EMAIL_PK PRIMARY KEY(U_EMAIL)
, CONSTRAINT U_INFO_BACKUP_NICKNAME_UK UNIQUE(U_NICKNAME)
);
--==>> Table USER_INFORMATION_BACKUP이(가) 생성되었습니다.


-- ○ 인증 종류 테이블 [ AUTH_CATEGORY ]
CREATE TABLE AUTH_CATEGORY
( AU_CATE_ID NUMBER
, AU_NAME VARCHAR2(20) NOT NULL
, CONSTRAINT AU_CATE_ID_PK PRIMARY KEY(AU_CATE_ID)
);
--==>> Table AUTH_CATEGORY이(가) 생성되었습니다.

-- ○ 인증종류 시퀀스 [ AUTH_CATEGORY_SEQ ]
CREATE SEQUENCE AUTH_CATEGORY_SEQ
NOCACHE;
--==>> Sequence AUTH_CATEGORY_SEQ이(가) 생성되었습니다.

-- ○ 이메일인증 테이블 [ USER_EMAIL_AUTH ]
CREATE TABLE USER_EMAIL_AUTH
( E_AUTH_ID     VARCHAR2(20)
, AUTH_CODE     VARCHAR2(30)
, AUTH_DATE     DATE
, AUTH_USE_DATE DATE
, U_ID          VARCHAR2(20)
, AU_CATE_ID    NUMBER
, CONSTRAINT E_AUTH_ID_PK PRIMARY KEY(E_AUTH_ID)
, CONSTRAINT U_AUTH_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT AU_CATE_ID_FK FOREIGN KEY(AU_CATE_ID)
                REFERENCES AUTH_CATEGORY(AU_CATE_ID)
);
--==>> Table USER_EMAIL_AUTH이(가) 생성되었습니다.

-- ○ 은행 테이블 [ BANK ]
CREATE TABLE BANK 
( BANK_ID  NUMBER
, BANK_NAME VARCHAR2(20) NOT NULL
, CONSTRAINT BANK_ID_PK PRIMARY KEY(BANK_ID)
);
--==>> Table BANK이(가) 생성되었습니다.

-- ○ 은행 시퀀스 생성 [ BANK_SEQ ]
CREATE SEQUENCE BANK_SEQ
NOCACHE;
--==>> Sequence BANK_SEQ이(가) 생성되었습니다.

-- ○ 출금 테이블 [ OUTPUT_MONEY ]
CREATE TABLE OUTPUT_MONEY
( OUT_M_ID VARCHAR2(20)     NOT NULL
, OUT_MONEY NUMBER          NOT NULL
, OUT_DATE  DATE            NOT NULL
, OUT_ACCOUNT VARCHAR2(30)  NOT NULL
, U_ID      VARCHAR2(20)    NOT NULL
, BANK_ID   NUMBER          NOT NULL
, CONSTRAINT OUT_M_ID_PK PRIMARY KEY(OUT_M_ID)
, CONSTRAINT OUT_U_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT OUT_BANK_ID_FK FOREIGN KEY(BANK_ID)
                REFERENCES BANK(BANK_ID)
);
--==>> Table OUTPUT_MONEY이(가) 생성되었습니다.

-- ○ 입금 테이블 [ INPUT_MONEY ]
CREATE TABLE INPUT_MONEY
( IN_M_ID VARCHAR2(20)     NOT NULL
, IN_MONEY NUMBER          NOT NULL
, IN_DATE  DATE            NOT NULL
, IN_ACCOUNT VARCHAR2(30)  NOT NULL
, U_ID      VARCHAR2(20)    NOT NULL
, BANK_ID   NUMBER          NOT NULL
, CONSTRAINT IN_M_ID_PK PRIMARY KEY(IN_M_ID)
, CONSTRAINT IN_U_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT IN_BANK_ID_FK FOREIGN KEY(BANK_ID)
                REFERENCES BANK(BANK_ID)
);
--==>> Table INPUT_MONEY이(가) 생성되었습니다.
--●------------------==================----------------------●--
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
--●------------------4. 상품관련 테이블----------------------●--


-- ○ 상품 카테고리 테이블 [ PRODUCT_CATEGORY ]
CREATE TABLE PRODUCT_CATEGORY
( PD_CATEGORY_ID NUMBER
, CATEGORY_NAME VARCHAR2(20) NOT NULL
, CONSTRAINT PD_CATEGORY_ID_PK PRIMARY KEY(PD_CATEGORY_ID)
);
--==>> Table PRODUCT_CATEGORY이(가) 생성되었습니다.


-- 상품카테고리 시퀀스 [ PRODUCT_CATEGORY_SEQ ]
CREATE SEQUENCE PRODUCT_CATEGORY_SEQ
NOCACHE;
--==>> Sequence PRODUCT_CATEGORY_SEQ이(가) 생성되었습니다.

-- ○ 카테고리 테이블 데이터 입력 [ PRODUCT_CATEGORY ]
INSERT INTO PRODUCT_CATEGORY
VALUES(PRODUCT_CATEGORY_SEQ.NEXTVAL, 'CPU');
--==>> 1 행 이(가) 삽입되었습니다.

-- ○ 확인
SELECT *
FROM PRODUCT_CATEGORY;
--==>> 1	CPU

-- ○ 제조사 테이블 [ PRODUCT_MAKER ]
CREATE TABLE PRODUCT_MAKER
( PD_MAKER_ID       VARCHAR2(20)    
, MAKER_KOR_NAME    VARCHAR2(20)    NOT NULL
, MAKER_ENG_NAME    VARCHAR2(20)    NOT NULL
, PD_CATEGORY_ID    NUMBER
, CONSTRAINT PD_MAKER_ID_PK PRIMARY KEY(PD_MAKER_ID)
, CONSTRAINT PD_CATEGORY_ID_FK FOREIGN KEY(PD_CATEGORY_ID)
            REFERENCES PRODUCT_CATEGORY(PD_CATEGORY_ID)
);
--==>> Table PRODUCT_MAKER이(가) 생성되었습니다.


-- ○ AS 가능여부 테이블 [ PRODUCT_AS ]
CREATE TABLE PRODUCT_AS
( PD_AS_ID NUMBER
, PD_AS_NAME VARCHAR(20) NOT NULL
, CONSTRAINT PD_AS_ID_PK PRIMARY KEY(PD_AS_ID)
);
--==>> Table PRODUCT_AS이(가) 생성되었습니다.

-- ○ AS 가능 여부 시퀀스 [ PRODUCT_AS_SEQ ]
CREATE SEQUENCE PRODUCT_AS_SEQ
NOCACHE;
--==>> Sequence PRODUCT_AS_SEQ이(가) 생성되었습니다.

-- ○ 택배거래상품등록 테이블 [ DELIVERY_PRODUCT ]
CREATE TABLE DELIVERY_PRODUCT
( DELI_PD_ID        VARCHAR2(20)    
, PD_TITLE          VARCHAR2(30)        NOT NULL
, PD_NAME           VARCHAR2(30)        NOT NULL
, PD_PHOTO          VARCHAR2(1000)       NOT NULL
, PD_AS_REMAIN      VARCHAR2(20)
, PD_START_PRICE    NUMBER              NOT NULL
, PD_HITCOUNT       NUMBER              DEFAULT 0
, PD_REGIT_DATE     DATE                DEFAULT SYSDATE
, PD_MAKER_ID       VARCHAR2(20)        
, PD_AS_ID          NUMBER
, U_ID              VARCHAR2(20)
, CONSTRAINT DELI_PD_ID_PK PRIMARY KEY(DELI_PD_ID)
, CONSTRAINT PD_MAKER_ID_FK FOREIGN KEY(PD_MAKER_ID)
            REFERENCES PRODUCT_MAKER(PD_MAKER_ID)
, CONSTRAINT PD_AS_ID_FK FOREIGN KEY(PD_AS_ID)
            REFERENCES PRODUCT_AS(PD_AS_ID)
, CONSTRAINT U_ID_FK FOREIGN KEY(U_ID)
            REFERENCES COMFIT_USER(U_ID)
);
--==>> Table DELIVERY_PRODUCT이(가) 생성되었습니다.

-- ○ 입찰등록 테이블 [ BID_LIST ]
CREATE TABLE BID_LIST
( BID_CODE      VARCHAR2(20)
, BID_DATE      DATE            DEFAULT SYSDATE
, BID_PRICE     NUMBER          NOT NULL
, ADDRESS       VARCHAR2(30)    NOT NULL
, ADDR_DETAIL   VARCHAR2(30)    NOT NULL
, U_ID          VARCHAR2(20)
, DELI_PD_ID    VARCHAR2(20)
, CONSTRAINT BID_CODE_PK PRIMARY KEY(BID_CODE)
, CONSTRAINT BID_U_ID_FK FOREIGN KEY(U_ID)
            REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT BID_DELI_PD_ID FOREIGN KEY(DELI_PD_ID)
            REFERENCES DELIVERY_PRODUCT(DELI_PD_ID)
);
--==>> Table BID_LIST이(가) 생성되었습니다.

-- ○ 낙찰테이블 [ BID_SUCCESS ]
CREATE TABLE BID_SUCCESS
( BS_ID     VARCHAR2(20)
, BS_DATE   DATE            DEFAULT SYSDATE
, BID_CODE  VARCHAR2(20)
, CONSTRAINT BS_ID_PK PRIMARY KEY(BS_ID)
, CONSTRAINT BID_CODE FOREIGN KEY(BID_CODE)
            REFERENCES BID_LIST(BID_CODE)
);
--==>> Table BID_SUCCESS이(가) 생성되었습니다.

-- ○ 택배거래 판매확정 테이블 [ DELI_COMPLETE_SELL ]
CREATE TABLE DELI_COMPLETE_SELL
( DELI_COMP_SELL_ID     VARCHAR2(20)
, PD_DELI_NUM           VARCHAR2(20)    NOT NULL
, REVIEW                VARCHAR2(20)    
, SELL_COMP_DATE        DATE            DEFAULT SYSDATE 
, BS_ID                 VARCHAR2(20)
, CONSTRAINT DELI_COMP_SELL_ID_PK PRIMARY KEY(DELI_COMP_SELL_ID)
, CONSTRAINT DCS_BS_ID_FK FOREIGN KEY(BS_ID)
            REFERENCES BID_SUCCESS(BS_ID)
);
--==>> Table DELI_COMPLETE_SELL이(가) 생성되었습니다.

-- ○ 택배거래 구매확정 테이블 [ DELI_COMPLETE_BUY ]
CREATE TABLE DELI_COMPLETE_BUY
( DELI_COMP_BUY_ID      VARCHAR2(20)
, REVIEW                VARCHAR2(20)
, BUY_COMP_DATE         DATE            DEFAULT SYSDATE
, BS_ID                 VARCHAR2(20)
, CONSTRAINT DELI_COMP_BUY_ID_PK PRIMARY KEY(DELI_COMP_BUY_ID)
, CONSTRAINT DELI_BS_ID FOREIGN KEY(BS_ID)
            REFERENCES BID_SUCCESS(BS_ID)
);
--==>> Table DELI_COMPLETE_BUY이(가) 생성되었습니다.


-- ○ 직거래상품등록 테이블 [ DIRECT_PRODUCT ]
CREATE TABLE DIRECT_PRODUCT
( DIRE_PD_ID        VARCHAR2(20)
, PD_TITLE          VARCHAR2(30)        NOT NULL
, PD_NAME           VARCHAR2(30)        NOT NULL
, PD_PHOTO          VARCHAR2(1000)      NOT NULL
, PD_AS_REMAIN      VARCHAR2(20)        
, PD_HITCOUNT       NUMBER              DEFAULT 0
, PD_HOPEPRICE      NUMBER              NOT NULL
, PD_HOPE_SDATE     DATE                NOT NULL
, PD_HOPE_EDATE     DATE                NOT NULL
, PD_HOPE_STIME     DATE                NOT NULL
, PD_HOPE_ETIME     DATE                NOT NULL
, PD_HOPE_PLACE     VARCHAR2(50)        NOT NULL
, PD_HOPE_MGRS      VARCHAR2(50)        NOT NULL
, PD_REGIT_DATE     DATE                DEFAULT SYSDATE
, PD_MAKER_ID       VARCHAR2(20)
, PD_AS_ID          NUMBER
, U_ID              VARCHAR2(20)
, CONSTRAINT DIRE_PD_ID_PK PRIMARY KEY(DIRE_PD_ID)
, CONSTRAINT DIRE_PD_MAKER_ID_FK FOREIGN KEY(PD_MAKER_ID)
            REFERENCES PRODUCT_MAKER(PD_MAKER_ID)
, CONSTRAINT DIRE_PD_AS_ID_FK FOREIGN KEY(PD_AS_ID)
            REFERENCES PRODUCT_AS(PD_AS_ID)
, CONSTRAINT DIRE_U_ID_FK FOREIGN KEY(U_ID)
            REFERENCES COMFIT_USER(U_ID)
);
--==>> Table DIRECT_PRODUCT이(가) 생성되었습니다.

-- ○ 구매제안 등록 테이블 [ SUGGEST_LIST ]
CREATE TABLE SUGGEST_LIST
( SUGGEST_CODE      VARCHAR2(20)
, SUGGEST_PRICE     NUMBER          NOT NULL
, SUGGEST_TIME      DATE            NOT NULL        -- 구매제안을하고자하는 날짜
, SUGGEST_DATE      DATE            DEFAULT SYSDATE        -- 구매제안을 등록한 날짜
, SUGGEST_PLACE     VARCHAR2(50)    NOT NULL
, PLACE_DETAIL      VARCHAR2(50)    NOT NULL
, U_ID              VARCHAR2(20)    
, DIRE_PD_ID        VARCHAR2(20)
, CONSTRAINT SUGGEST_CODE_PK PRIMARY KEY(SUGGEST_CODE)
, CONSTRAINT SUGGEST_U_ID_FK   FOREIGN KEY(U_ID)
            REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT SUGGEST_DIRE_PD_ID_FK FOREIGN KEY(DIRE_PD_ID)
            REFERENCES DIRECT_PRODUCT(DIRE_PD_ID)
);
--==>> Table SUGGEST_LIST이(가) 생성되었습니다.

-- ○ 채택 테이블 [ SELECTED ]
CREATE TABLE SELECTED
( SELECTED_ID       VARCHAR2(20)
, SELECTED_DATE     DATE            DEFAULT SYSDATE
, BUYER_CODE        VARCHAR2(20)    NOT NULL
, SELLER_CODE       VARCHAR2(20)    NOT NULL
, SUGGEST_CODE      VARCHAR2(20)
, CONSTRAINT SELECTED_ID_PK PRIMARY KEY(SELECTED_ID)
, CONSTRAINT SELECTED_SUGGEST_CODE FOREIGN KEY(SUGGEST_CODE)
            REFERENCES SUGGEST_LIST(SUGGEST_CODE)

);
--==>> Table SELECTED이(가) 생성되었습니다.

-- ○ 직거래 판매확정 테이블 [ DIRE_COMPLETE_SELL ]
CREATE TABLE DIRE_COMPLETE_SELL
( DIRE_COMP_SELL_ID     VARCHAR2(20)
, REVIEW                VARCHAR2(20)             
, SELL_COMP_DATE        DATE            DEFAULT SYSDATE
, SELECTED_ID           VARCHAR2(20)
, CONSTRAINT DIRE_COMP_SELL_ID_PK PRIMARY KEY(DIRE_COMP_SELL_ID)
, CONSTRAINT DCS_SELECTED_ID_FK FOREIGN KEY(SELECTED_ID)
            REFERENCES SELECTED(SELECTED_ID)
);
--==>> Table DIRE_COMPLETE_SELL이(가) 생성되었습니다.

-- ○ 직거래 구매확정 테이블 [ DIRE_COMPLETE_BUY ]
CREATE TABLE DIRE_COMPLETE_BUY
( DIRE_COMP_BUY_ID      VARCHAR2(20)
, REVIEW                VARCHAR2(20)
, BUY_COMP_DATE         DATE            DEFAULT SYSDATE
, SELECTED_ID           VARCHAR2(20)
, CONSTRAINT DIRE_COMP_BUY_ID_PK    PRIMARY KEY(DIRE_COMP_BUY_ID)
, CONSTRAINT DCB_SELECTED_ID FOREIGN KEY(SELECTED_ID)
            REFERENCES SELECTED(SELECTED_ID)
);
--==>> Table DIRE_COMPLETE_BUY이(가) 생성되었습니다.

-- ○ 택배거래 관심상품 테이블 생성(USER_PICK_DELIVERY)
CREATE TABLE USER_PICK_DELIVERY
( DELI_PICK_ID      VARCHAR2(20)
, PICK_DATE         DATE            DEFAULT SYSDATE
, U_ID              VARCHAR2(20)
, DELI_PD_ID        VARCHAR2(20)
, CONSTRAINT DELI_PICK_ID_PK    PRIMARY KEY(DELI_PICK_ID)
, CONSTRAINT UPD_U_ID_FK    FOREIGN KEY(U_ID)
            REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT UPD_DELI_PD_ID_FK  FOREIGN KEY(DELI_PD_ID)
            REFERENCES DELIVERY_PRODUCT(DELI_PD_ID)
);
--==>> Table USER_PICK_DELIVERY이(가) 생성되었습니다.

-- ○ 직거래 관심상품 테이블 [ USER_PICK_DIRECT ] 
CREATE TABLE USER_PICK_DIRECT
( DIRE_PICK_ID      VARCHAR2(20)
, PICK_DATE         DATE            DEFAULT SYSDATE
, U_ID              VARCHAR2(20)
, DIRE_PD_ID        VARCHAR2(20)
, CONSTRAINT DIRE_PICK_ID_PK    PRIMARY KEY(DIRE_PICK_ID)
, CONSTRAINT UPR_U_ID_FK    FOREIGN KEY(U_ID)
            REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT UPR_DIRE_PD_ID_FK  FOREIGN KEY(DIRE_PD_ID)
            REFERENCES DIRECT_PRODUCT(DIRE_PD_ID)
);
--==>> Table USER_PICK_DIRECT이(가) 생성되었습니다.
--●------------------==================----------------------●--
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
--●------------------5. 고객센터 관련 테이블----------------------●--

-- ○ 공지사항 카테고리 테이블 [ ANNOUNCE_CATEGORY ]
CREATE TABLE ANNOUNCE_CATEGORY
( ANOUN_CATE_ID     NUMBER
, ANOUN_CATE_NAME   VARCHAR2(20) NOT NULL
, CONSTRAINT ANOUN_CATE_ID_PK PRIMARY KEY(ANOUN_CATE_ID)
);
--==>> Table ANNOUNCE_CATEGORY이(가) 생성되었습니다.


-- ○ 공지사항 카테고리 시퀀스 생성 [ ANNOUNCE_CATEGORY_SEQ ]
CREATE SEQUENCE ANNOUNCE_CATEGORY_SEQ
NOCACHE;
--==>>Sequence ANNOUNCE_CATEGORY_SEQ이(가) 생성되었습니다.

-- ○ 공지사항 테이블 [ ANNOUNCE ]
CREATE TABLE ANNOUNCE
( ANNOUNCE_ID VARCHAR2(20)          NOT NULL
, ANNOUNCE_TITLE VARCHAR2(60)       NOT NULL
, ANNOUNCE_CONTENTS VARCHAR2(2000)  NOT NULL
, ANNOUNCE_DATE DATE                NOT NULL
, ANOUN_CATE_ID NUMBER              NOT NULL
, CONSTRAINT ANNOUNCE_ID_PK PRIMARY KEY(ANNOUNCE_ID)
, CONSTRAINT ANOUN_CATE_FK FOREIGN KEY(ANOUN_CATE_ID)
                REFERENCES ANNOUNCE_CATEGORY(ANOUN_CATE_ID)
);
--==>> Table ANNOUNCE이(가) 생성되었습니다.


-- ○ 문의 카테고리 테이블 [ ASK_CATEGORY ]
CREATE TABLE ASK_CATEGORY
( ASK_CATE_ID   NUMBER
, ASK_CATE_NAME VARCHAR2(20) NOT NULL
, CONSTRAINT ASK_CATE_ID_PK PRIMARY KEY(ASK_CATE_ID)
);
--==>> Table ASK_CATEGORY이(가) 생성되었습니다.

-- ○ 문의 카테고리 시퀀스 생성 [ ASK_CATEGORY_SEQ ]
CREATE SEQUENCE ASK_CATEGORY_SEQ
NOCACHE;
--==>>Sequence ASK_CATEGORY_SEQ이(가) 생성되었습니다.


-- ○ 문의등록 테이블 [ ASK ]
CREATE TABLE ASK
( ASK_ID            VARCHAR2(20)        NOT NULL
, ASK_TITLE         VARCHAR2(60)        NOT NULL
, ASK_CONTENTS      VARCHAR2(2000)      NOT NULL
, ASK_DATE          DATE                NOT NULL
, U_ID              VARCHAR2(20)        NOT NULL
, ASK_CATE_ID       NUMBER              NOT NULL
, CONSTRAINT ASK_ID_PK PRIMARY KEY(ASK_ID)
, CONSTRAINT ASK_U_ID_FK FOREIGN KEY(U_ID)
                REFERENCES COMFIT_USER(U_ID)
, CONSTRAINT ASK_CATE_ID FOREIGN KEY(ASK_CATE_ID)
                REFERENCES ASK_CATEGORY(ASK_CATE_ID)
);
--==>> Table ASK이(가) 생성되었습니다.

-- ○ 문의답변 테이블 [ ASK_ANSWER ]
CREATE TABLE ASK_ANSWER
( ASK_ID            VARCHAR2(20)    NOT NULL
, ANSWER_CONTENTS  VARCHAR2(2000)  NOT NULL
, ANSWER_DATE       DATE            NOT NULL
, AD_ID             VARCHAR2(20)    NOT NULL
, CONSTRAINT ANSWER_ASK_ID_FK FOREIGN KEY(ASK_ID)
                REFERENCES ASK(ASK_ID)
, CONSTRAINT ANSWER_ASK_ID_PK PRIMARY KEY(ASK_ID)
, CONSTRAINT ANSWER_AD_ID_FK FOREIGN KEY(AD_ID)
                REFERENCES ADMIN(AD_ID)
);
--==>> Table ASK_ANSWER이(가) 생성되었습니다.

-- ○ FAQ 테이블 생성 [ FAQ ]
CREATE TABLE FAQ
( FAQ_ID NUMBER
, FAQ_TITLE VARCHAR2(30) NOT NULL
, FAQ_CONTENTS VARCHAR2(300) NOT NULL
, CONSTRAINT FAQ_ID_PK PRIMARY KEY(FAQ_ID)
);
--==>> Table FAQ이(가) 생성되었습니다.

-- ○ FAQ 시퀀스 생성 [ FAQ_SEQ ]
CREATE SEQUENCE FAQ_SEQ
NOCACHE;
--==>> Sequence FAQ_SEQ이(가) 생성되었습니다.

--●---------------------====================----------------------●--
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
-- ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
--●--------------------6. 관리자 관련 테이블----------------------●--

-- ○ 관리자 테이블 [ ADMIN ]
CREATE TABLE ADMIN
( AD_ID VARCHAR2(20)
, AD_PW VARCHAR2(20)  NOT NULL
, CONSTRAINT AD_ID_PK PRIMARY KEY(AD_ID)
);
--==>> Table ADMIN이(가) 생성되었습니다.
--●---------------------====================----------------------●--