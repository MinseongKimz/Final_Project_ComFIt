SELECT PD_ID, PD_TITLE, NVL(PD_PRICE, -1) AS PD_PRICE, SYSTEM, TO_CHAR(PD_REGIT_DATE, 'YYYY-MM-DD') AS PD_REGIT_DATE
, TIME, TO_CHAR(COMP_DATE, 'YYYY-MM-DD') AS COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
		FROM
		(
		SELECT PD_ID, PD_TITLE, PD_PRICE, SYSTEM, PD_REGIT_DATE, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
		, ROW_NUMBER() OVER(PARTITION BY PD_ID ORDER BY COMP_DATE ASC) AS RN
        FROM MY_PRODUCT_LIST
		WHERE SELLER_ID = 'test1'
		ORDER BY PD_REGIT_DATE DESC
		)
		WHERE RN=1;


SELECT *
FROM INPUT_MONEY;

INSERT INTO INPUT_MONEY(IN_M_ID, IN_MONEY, IN_ACCOUNT, U_ID, BANK_ID)
VALUES('inm_2', 3000000, '941610-11-315477', 'test2', 2);

commit;

SELECT PD_ID, PD_TITLE, PD_PRICE, SYSTEM, TO_CHAR(PD_REGIT_DATE, 'YYYY-MM-DD') AS PD_REGIT_DATE
, TIME, TO_CHAR(COMP_DATE, 'YYYY-MM-DD') AS COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM MY_PRODUCT_LIST
WHERE BUYER_ID = 'test2'
ORDER BY PD_REGIT_DATE DESC;

select *
from comfit_user;



SELECT *
FROM MY_PRODUCT_LIST;

-- MY_PRODUCT_LIST에 BSE_ID 추가
CREATE OR REPLACE VIEW MY_PRODUCT_LIST
AS
  SELECT DELI_PD_ID AS PD_ID, PD_TITLE, NVL(BID_PRICE, PD_START_PRICE) AS PD_PRICE
, '택배(경매)' AS SYSTEM
, PD_REGIT_DATE, NULL AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS, BS_ID AS BSE_ID
FROM DELI_SELL_LIST
UNION
SELECT DIRE_PD_ID AS PD_ID, PD_TITLE, SUGGEST_PRICE AS PD_PRICE
, '직거래(제안거래)' AS SYSTEM
, PD_REGIT_DATE, SUGGEST_TIME AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, SUGGEST_ADDR AS ADDRESS, STATUS, SELECTED_ID AS BSE_ID
FROM DIRE_SELL_LIST;


--> 구매/판매확정코드 확인도 되는 DETAIL_BUYLIST_VIEW 테이블

CREATE OR REPLACE VIEW DETAIL_BUYLIST_VIEW
AS
SELECT PD_ID, PD_TITLE, PD_PRICE, SYSTEM, TO_CHAR(PD_REGIT_DATE, 'YYYY-MM-DD') AS PD_REGIT_DATE
		, TIME, TO_CHAR(COMP_DATE, 'YYYY-MM-DD') AS COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
        , SE.SELECTED_ID, TO_CHAR(SE.SELECTED_DATE, 'YYYY-MM-DD') AS SELECTED_DATE, SE.BUYER_CODE, SE.SELLER_CODE
FROM MY_PRODUCT_LIST MPL
LEFT OUTER JOIN SELECTED SE
ON MPL.BSE_ID = SE.SELECTED_ID;



--> 구매리스트 체크하는 테이블을 변경
SELECT PD_ID, PD_TITLE, PD_PRICE, SYSTEM, PD_REGIT_DATE
		, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
        , SELECTED_ID, SELECTED_DATE, BUYER_CODE, SELLER_CODE
		FROM DETAIL_BUYLIST_VIEW
		WHERE BUYER_ID = 'test2'
		ORDER BY PD_REGIT_DATE DESC;


--> 구매확정 시퀀스
CREATE SEQUENCE DIRE_COMPLETE_BUY_SEQ
NOCACHE;

SELECT *
FROM DIRE_COMPLETE_BUY;

-- 인서트문 예시
select *
from selected;

INSERT INTO DIRE_COMPLETE_BUY(DIRE_COMP_BUY_ID,REVIEW, SELECTED_ID)
VALUES(CONCAT('rcBuy',DIRE_COMPLETE_BUY_SEQ.NEXTVAL),'굿!!', 'sel_9');

rollback;

EXEC BUY_COMPLETE_PRC('sel_9', '805RLDYGTUWXABZZ', '감사합니다!')

COMMIT;


SELECT *
FROM USER_POINT_VIEW;

CREATE OR REPLACE VIEW USER_POINT_VIEW
AS
SELECT INPUT.U_ID, (IN_MONEY_TOT - NVL(OUT_MONEY_TOT,0)) AS POINT
FROM USER_INMONEY_VIEW INPUT
LEFT OUTER JOIN USER_OUTMONEY_VIEW OUTPUT
ON INPUT.U_ID = OUTPUT.U_ID;

SELECT *
FROM USER_POINT_VIEW;

CREATE OR REPLACE VIEW USER_INMONEY_VIEW
AS
SELECT U_ID, SUM(IN_MONEY) AS IN_MONEY_TOT
FROM
(
SELECT BUYER_ID AS U_ID, BISG_PRICE AS IN_MONEY
FROM BS_FAIL_VIEW
UNION
SELECT U_ID, SUM(IN_MONEY)
FROM INPUT_MONEY
GROUP BY U_ID
UNION
SELECT U_ID, IN_MONEY
FROM DELI_INMONEY_VIEW
UNION
SELECT U_ID, IN_MONEY
FROM DIRE_INMONEY_VIEW
)
GROUP BY U_ID;

SELECT *
FROM INPUT_MONEY;

COMMIT;

