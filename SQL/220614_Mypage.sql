
--==>> 마이페이지 자세한정보
SELECT U_EMAIL, U_NICKNAME, U_NAME
, SUBSTR(CRYPTPACK.DECRYPT(U_PASSWORD,'1234'),1,1) 
|| LPAD('*',LENGTH(CRYPTPACK.DECRYPT(U_PASSWORD,'1234'))-1,'*') as U_PASSWORD
, U_TEL, U_ADDRESS
FROM USER_INFORMATION
WHERE U_ID = 'test1';


--==>>
/*
issac1162@test.com	삭이오	        1***	010-2988-1162	인천광역시 중구 신흥동1가 6-4
kkk@naver.com	    민성킴의활약	1***	010-2222-3333	서울특별시 중구 을지로 5가 223-4
hjui78@naver.com	김깐돌	        1***	010-1111-1111	인천 계양구 새벌로 112번길 12 405동 1703호
*/

--==>> MYPAGE 출력용
SELECT U_NICKNAME, U_PROFILE
FROM USER_INFORMATION
WHERE U_ID = 'test1';


--==>> 입출금 내역 VIEW 만들기
CREATE OR REPLACE VIEW MONEY_INOUT_VIEW
AS
SELECT IN_M_ID AS M_ID, IN_DATE AS M_DATE, IN_MONEY AS M_MONEY, U_ID   
FROM INPUT_MONEY
UNION
SELECT OUT_M_ID AS M_ID, OUT_DATE AS M_DATE, OUT_MONEY AS M_MONEY, U_ID
FROM OUTPUT_MONEY;

SELECT *
FROM MONEY_INOUT_VIEW;

--==>>
/*
inm_1	2022-06-10	500000	test1
outm_1	2022-06-10	500000	test1
*/

--==>> 마이페이지에 보여주기 위해 행 추가+행 이름 변환, 날짜로 정렬
--> 조건으로 해당인물의 입출금내역 출력
SELECT M_DATE, M_MONEY
, CASE WHEN SUBSTR(M_ID,1,3) = 'inm' THEN '입금'
        WHEN SUBSTR(M_ID,1,4) = 'outm' THEN '출금'
    ELSE '에러' END AS INOUT
FROM MONEY_INOUT_VIEW
WHERE U_ID = 'test1';

SELECT POINT
FROM ALL_USER_POINT_VIEW
WHERE U_ID = 'test1';

--==>> 판매 시작일	최종 금액	상품정보	방식	예정 장소	직거래 예정 일시	실제 거래 일시	상태
--BIDCOUNT = 입찰 갯수
--거래상태 : 입찰 받는 중(수정/삭제 가능)              : BIDCOUNT = 0
--         : 경매 중(수정/삭제 불가능)                 : BIDCOUNT > 0
--         : 거래 중(낙찰 완료)                        : SUCCESSCOUNT = 1, COMPLETECOUNT = 0
--         : 구매확정 대기중(구매확정하면 거래완료)    : SELLCOUNT = 1, BUYCOUNT = 0
--         : 판매확정 대기중(판매확정하면 거래완료)    : BUYCOUNT = 1, SELLCOUNT = 0
--         : 거래 완료(판매자가 POINT를 받은 상태)     : COMPLETECOUNT = 2

--> 택배거래 상태를 나타내기 위한 뷰
CREATE OR REPLACE VIEW DELI_PD_COUNT_VIEW
AS
SELECT DP.DELI_PD_ID, DP.PD_TITLE, DP.PD_START_PRICE, BL.BID_PRICE,DP.PD_REGIT_DATE, BL.BID_DATE, DP.U_ID AS SELLER_ID, BL.U_ID AS BUYER_ID, DP.IMD_PRICE, BS.BS_ID
, (BL.ADDRESS || ' ' || BL.ADDR_DETAIL) AS ADDRESS
, RANK() OVER (PARTITION BY DP.DELI_PD_ID ORDER BY BL.BID_PRICE DESC) AS RANK
, (SELECT COUNT(*)
            FROM BID_LIST
            WHERE DELI_PD_ID = DP.DELI_PD_ID) AS BIDCOUNT
, (SELECT COUNT(*)
            FROM BID_SUCCESS
            WHERE BID_CODE = BL.BID_CODE) AS SUCCESSCOUNT
, (SELECT COUNT(*)
            FROM DELI_COMPLETE_SELL
            WHERE BS_ID = BS.BS_ID) AS SELLCOUNT
, (SELECT COUNT(*)
            FROM DELI_COMPLETE_BUY
            WHERE BS_ID = BS.BS_ID) AS BUYCOUNT
, ((SELECT COUNT(*)
            FROM DELI_COMPLETE_SELL
            WHERE BS_ID = BS.BS_ID)
+ (SELECT COUNT(*)
            FROM DELI_COMPLETE_BUY
            WHERE BS_ID = BS.BS_ID)) AS COMPLETECOUNT
FROM DELIVERY_PRODUCT DP
    LEFT OUTER JOIN BID_LIST BL
    ON BL.DELI_PD_ID = DP.DELI_PD_ID
    LEFT OUTER JOIN BID_SUCCESS BS
    ON BS.BID_CODE = BL.BID_CODE
    LEFT OUTER JOIN DELI_COMPLETE_SELL DCS
    ON DCS.BS_ID = BS.BS_ID
    LEFT OUTER JOIN DELI_COMPLETE_BUY DCV
    ON DCV.BS_ID = BS.BS_ID;

--> 확인을 위해 행 한개 생성 
SELECT *
FROM DELIVERY_PRODUCT;

INSERT INTO DELIVERY_PRODUCT(DELI_PD_ID, PD_TITLE, PD_NAME, PD_PHOTO, PD_AS_REMAIN
, PD_START_PRICE, PD_MAKER_ID, PD_AS_ID, U_ID, COMMENTS, IMD_PRICE)
VALUES('deli_2', '레이저 마우스 급처', '레이저 바이퍼', 'C:\Downloads', '3개월'
, 20000, 'maker_122', 3, 'test3', '급처해요', 50000);


-- 확인
SELECT DELI_PD_ID, PD_TITLE, PD_START_PRICE, PD_REGIT_DATE, SELLER_ID, BUYER_ID, IMD_PRICE,BID_PRICE, BIDCOUNT, SUCCESSCOUNT, SELLCOUNT, BUYCOUNT, COMPLETECOUNT
FROM DELI_PD_COUNT_VIEW;

--거래상태 : 입찰 받는 중(수정/삭제 가능)              : BIDCOUNT = 0
--         : 경매 중(수정/삭제 불가능)                 : BIDCOUNT > 0
--         : 거래 중(낙찰 완료)                        : SUCCESSCOUNT = 1, COMPLETECOUNT = 0
--         : 구매확정 대기중(구매확정하면 거래완료)    : SELLCOUNT = 1, BUYCOUNT = 0
--         : 판매확정 대기중(판매확정하면 거래완료)    : BUYCOUNT = 1, SELLCOUNT = 0
--         : 거래 완료(판매자가 POINT를 받은 상태)     : COMPLETECOUNT = 2

-- 내 판매내역 페이지
SELECT *
FROM DELI_PD_COUNT_VIEW
WHERE RANK = 1;

SELECT *
FROM DELI_PD_COUNT_VIEW DPCV
WHERE BID_PRICE = (SELECT MAX(BID_PRICE)
                    FROM BID_LIST
                    WHERE DELI_PD_ID = DPCV.DELI_PD_ID);

SELECT *
FROM DELI_PD_COUNT_VIEW;
 
--==>> 가장 마지막에 확정한 기록을 찾기 위해 넣을 서브쿼리
SELECT COMP_DATE, BS_ID
FROM
(
    SELECT BS_ID, COMP_DATE, RANK() OVER (PARTITION BY BS_ID ORDER BY COMP_DATE DESC) AS RANK
    FROM
    (
    SELECT DELI_COMP_SELL_ID AS COMP_ID ,  REVIEW, SELL_COMP_DATE AS COMP_DATE, BS_ID
    FROM DELI_COMPLETE_SELL
    UNION
    SELECT DELI_COMP_BUY_ID AS COMP_ID, REVIEW, BUY_COMP_DATE AS COMP_DATE, BS_ID
    FROM DELI_COMPLETE_BUY
    )
)WHERE RANK = 1;

SELECT *
FROM BID_LIST;

-- 택배거래 거래 내역 출력
CREATE OR REPLACE VIEW DELI_SELL_LIST
AS
SELECT DELI_PD_ID, PD_TITLE, PD_START_PRICE, BID_PRICE, PD_REGIT_DATE, BID_DATE, RANK
, (SELECT COMP_DATE
    FROM
    (
        SELECT BS_ID, COMP_DATE, RANK() OVER (PARTITION BY BS_ID ORDER BY COMP_DATE DESC) AS RANK
        FROM
        (
        SELECT DELI_COMP_SELL_ID AS COMP_ID ,  REVIEW, SELL_COMP_DATE AS COMP_DATE, BS_ID
        FROM DELI_COMPLETE_SELL
        UNION
        SELECT DELI_COMP_BUY_ID AS COMP_ID, REVIEW, BUY_COMP_DATE AS COMP_DATE, BS_ID
        FROM DELI_COMPLETE_BUY
        )
    )WHERE RANK = 1
    AND BS_ID = DPCV.BS_ID
    ) AS COMP_DATE
, SELLER_ID, BUYER_ID, IMD_PRICE, ADDRESS
,(CASE WHEN COMPLETECOUNT = 2 THEN '거래완료'
WHEN BUYCOUNT = 1 AND SELLCOUNT = 0 THEN '판매확정대기중'
WHEN SELLCOUNT = 1 AND BUYCOUNT = 0 THEN '구매확정대기중'
WHEN SUCCESSCOUNT = 1 AND COMPLETECOUNT = 0 THEN '거래중'
WHEN RANK != 1 THEN '다른입찰이낙찰'
WHEN PD_REGIT_DATE +4 < SYSDATE THEN '유찰됨'
WHEN BIDCOUNT > 0 THEN '입찰중'
WHEN BIDCOUNT = 0 THEN '입찰받는중' 
ELSE '에러' 
END) AS STATUS
FROM DELI_PD_COUNT_VIEW DPCV;


-- 택배거래 판매내역
-- 속성설명
-- 판매시작일     최종금액   상품정보   방식    예정장소 직거래예정일시 실제거래일시    상태
-- PD_REGIT_DATE  PD_PRICE   PD_TITLE  SYSTEM ADDRESS  (null)없음     (null)       STATUS
SELECT DELI_PD_ID, PD_TITLE, NVL(BID_PRICE, PD_START_PRICE) AS PD_PRICE
, '택배(경매)' AS SYSTEM
, PD_REGIT_DATE, COMP_DATE, SELLER_ID, BUYER_ID, IMD_PRICE, ADDRESS, STATUS
FROM DELI_SELL_LIST
WHERE SELLER_ID = 'test2' AND RANK=1; --COMP_DATE가 있으면 1, 없으면 2,3,4 등 뒤로 밀려남

-- 구매내역
SELECT *
FROM DELI_SELL_LIST
WHERE BUYER_ID = 'test3';



-- 직거래 카운트 뷰
CREATE OR REPLACE VIEW DIRE_PD_COUNT_VIEW
AS
SELECT DP.DIRE_PD_ID, PD_TITLE, PD_REGIT_DATE, DP.U_ID AS SELLER_ID, SL.U_ID AS BUYER_ID
, SUGGEST_PRICE, SUGGEST_TIME, SUGGEST_DATE, S.SELECTED_ID
, (SUGGEST_PLACE || ' ' || PLACE_DETAIL) AS SUGGEST_ADDR
, (SELECT COUNT(*)
            FROM SUGGEST_LIST
            WHERE DIRE_PD_ID = DP.DIRE_PD_ID) AS SUGGESTCOUNT
, (SELECT COUNT(*)
            FROM SELECTED
            WHERE SUGGEST_CODE = SL.SUGGEST_CODE) AS SELECTEDCOUNT
, (SELECT COUNT(*)
            FROM DIRE_COMPLETE_SELL
            WHERE SELECTED_ID = S.SELECTED_ID) AS SELLCOUNT
, (SELECT COUNT(*)
            FROM DIRE_COMPLETE_BUY
            WHERE SELECTED_ID = S.SELECTED_ID) AS BUYCOUNT
, (SELECT COUNT(*)
            FROM DIRE_COMPLETE_SELL
            WHERE SELECTED_ID = S.SELECTED_ID)
+ (SELECT COUNT(*)
            FROM DIRE_COMPLETE_BUY
            WHERE SELECTED_ID = S.SELECTED_ID) AS COMPLETECOUNT
FROM DIRECT_PRODUCT DP
    LEFT OUTER JOIN SUGGEST_LIST SL
    ON SL.DIRE_PD_ID = DP.DIRE_PD_ID
    LEFT OUTER JOIN SELECTED S
    ON SL.SUGGEST_CODE = S.SUGGEST_CODE
    LEFT OUTER JOIN DIRE_COMPLETE_SELL DCS
    ON DCS.SELECTED_ID = S.SELECTED_ID
    LEFT OUTER JOIN DIRE_COMPLETE_BUY DCV
    ON DCV.SELECTED_ID = S.SELECTED_ID;

SELECT *
    FROM DIRECT_PRODUCT DP
    LEFT OUTER JOIN SUGGEST_LIST SL
    ON SL.DIRE_PD_ID = DP.DIRE_PD_ID
    LEFT OUTER JOIN SELECTED S
    ON SL.SUGGEST_CODE = S.SUGGEST_CODE
    LEFT OUTER JOIN DIRE_COMPLETE_SELL DCS
    ON DCS.SELECTED_ID = S.SELECTED_ID
    LEFT OUTER JOIN DIRE_COMPLETE_BUY DCV
    ON DCV.SELECTED_ID = S.SELECTED_ID;


SELECT *
FROM DIRE_PD_COUNT_VIEW;

SELECT *
FROM DIRECT_PRODUCT;

--> COUNTVIEW 확인용 행 삽입
INSERT INTO DIRECT_PRODUCT(DIRE_PD_ID, PD_TITLE, PD_NAME, PD_PHOTO, PD_AS_REMAIN
, PD_HOPEPRICE, PD_HOPE_SDATE, PD_HOPE_EDATE, PD_HOPE_STIME, PD_HOPE_ETIME
, PD_HOPE_PLACE, PD_HOPE_MGRS, PD_REGIT_DATE, PD_MAKER_ID
, PD_AS_ID, U_ID, COMMENTS)
VALUES('dire_2', '새거같은 레오폴드 키보드 판매', 'FC900R', 'C:\Downloads', '2개월'
, 100000, TO_DATE('2022-06-18','YYYY-MM-DD'), TO_DATE('2022-06-20','YYYY-MM-DD'), '16:00', '17:00'
, '인천 송도 트리플스트리트' , '37.6568258/127.0178972', TO_DATE('2022-06-17','YYYY-MM-DD'), 'maker_70'
, 2, 'test2', '연습용');

select *
from SUGGEST_LIST;

INSERT INTO SUGGEST_LIST(SUGGEST_CODE, SUGGEST_PRICE, SUGGEST_TIME, SUGGEST_DATE, SUGGEST_PLACE, PLACE_DETAIL, U_ID, DIRE_PD_ID)
VALUES('suggest_2', 90000, sysdate, sysdate, '인천 송도', '인천대앞', 'test1', 'dire_2');
INSERT INTO SUGGEST_LIST(SUGGEST_CODE, SUGGEST_PRICE, SUGGEST_TIME, SUGGEST_DATE, SUGGEST_PLACE, PLACE_DETAIL, U_ID, DIRE_PD_ID)
VALUES('suggest_3', 80000, sysdate, sysdate, '인천 송도', '현대아울렛', 'test3', 'dire_2');

--> 서브쿼리(다른제안이 채택되었을때 카운트)
SELECT MAX(SELECTEDCOUNT)
FROM DIRE_PD_COUNT_VIEW
WHERE DIRE_PD_ID = 'dire_2'
GROUP BY DIRE_PD_ID;


--> 직거래 판매내역 VIEW(거래시간 만료 조건 수정필요)
CREATE OR REPLACE VIEW DIRE_SELL_LIST
AS
SELECT DIRE_PD_ID, PD_TITLE, PD_REGIT_DATE
, SUGGEST_TIME, SUGGEST_DATE, SELECTED_ID
, (SELECT COMP_DATE
    FROM
    ( SELECT SELECTED_ID, COMP_DATE, RANK() OVER (PARTITION BY SELECTED_ID ORDER BY COMP_DATE DESC) AS RANK
        FROM
        (
        SELECT DIRE_COMP_SELL_ID AS COMP_ID ,  REVIEW, SELL_COMP_DATE AS COMP_DATE, SELECTED_ID
        FROM DIRE_COMPLETE_SELL
        UNION
        SELECT DIRE_COMP_BUY_ID AS COMP_ID, REVIEW, BUY_COMP_DATE AS COMP_DATE, SELECTED_ID
        FROM DIRE_COMPLETE_BUY
        )
    )
    WHERE RANK = 1
    AND SELECTED_ID = DPCV.SELECTED_ID
    ) AS COMP_DATE
, SELLER_ID, BUYER_ID, SUGGEST_PRICE, SUGGEST_ADDR
,(CASE WHEN COMPLETECOUNT = 2 THEN '거래완료'
WHEN BUYCOUNT = 1 AND SELLCOUNT = 0 THEN '판매확정대기중'
WHEN SELLCOUNT = 1 AND BUYCOUNT = 0 THEN '구매확정대기중'
WHEN SELECTEDCOUNT = 1 AND COMPLETECOUNT = 0 THEN '거래중'
WHEN PD_REGIT_DATE +4 < SYSDATE THEN '거래시간만료'
WHEN (SELECT MAX(SELECTEDCOUNT)
        FROM DIRE_PD_COUNT_VIEW
        WHERE DIRE_PD_ID = DPCV.DIRE_PD_ID
        GROUP BY DIRE_PD_ID) > SELECTEDCOUNT
        THEN '다른제안이채택됨'
WHEN SUGGESTCOUNT > 0 THEN '제안중'
WHEN SUGGESTCOUNT = 0 THEN '제안받는중' 
ELSE '에러' 
END) AS STATUS
FROM DIRE_PD_COUNT_VIEW DPCV;


--> 직거래/택배거래 합치기
--> 택배거래 SELECT문
SELECT DELI_PD_ID AS PD_ID, PD_TITLE, NVL(BID_PRICE, PD_START_PRICE) AS PD_PRICE
, '택배(경매)' AS SYSTEM
, PD_REGIT_DATE, NULL AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM DELI_SELL_LIST
WHERE SELLER_ID = 'test2' AND RANK=1;

--> 직거래 SELECT문
SELECT DIRE_PD_ID AS PD_ID, PD_TITLE, SUGGEST_PRICE AS PD_PRICE
, '직거래(제안거래)' AS SYSTEM
, PD_REGIT_DATE, SUGGEST_TIME AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, SUGGEST_ADDR AS ADDRESS, STATUS
FROM DIRE_SELL_LIST;

--> 합치고 VIEW 만들기

--> 택배거래 SELECT문
CREATE OR REPLACE VIEW MY_PRODUCT_LIST
AS
SELECT DELI_PD_ID AS PD_ID, PD_TITLE, NVL(BID_PRICE, PD_START_PRICE) AS PD_PRICE
, '택배(경매)' AS SYSTEM
, PD_REGIT_DATE, NULL AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM DELI_SELL_LIST
UNION
SELECT DIRE_PD_ID AS PD_ID, PD_TITLE, SUGGEST_PRICE AS PD_PRICE
, '직거래(제안거래)' AS SYSTEM
, PD_REGIT_DATE, SUGGEST_TIME AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, SUGGEST_ADDR AS ADDRESS, STATUS
FROM DIRE_SELL_LIST;

-- 판매내역
SELECT PD_ID, PD_TITLE, PD_PRICE, SYSTEM, PD_REGIT_DATE, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM MY_PRODUCT_LIST
WHERE SELLER_ID = 'test1'
ORDER BY PD_REGIT_DATE DESC
;

-- 구매내역
SELECT PD_ID, PD_TITLE, PD_PRICE, SYSTEM, PD_REGIT_DATE, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM MY_PRODUCT_LIST
WHERE BUYER_ID = 'test3'
ORDER BY PD_REGIT_DATE DESC    
;

SELECT *
FROM DIRE_SELL_LIST;


SELECT *
FROM USER_PICK_DELIVERY;

SELECT *
FROM USER_PICK_DIRECT;


