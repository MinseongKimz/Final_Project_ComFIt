
SELECT *
FROM ALL_VIEWS
WHERE OWNER='COMFIT';


SELECT *
FROM DIRECT_PRODUCT;
--2개

SELECT *
FROM DELIVERY_PRODUCT;
--8개

SELECT *
FROM ad_pd_list_realview;


-- 종합상품리스트 수정
CREATE OR REPLACE FORCE VIEW "COMFIT"."TOTAL_PD_LIST_VIEW" ("PD_NUM", "PD_ID", "CATEGORY_NAME", "PD_REGIT_DATE", "U_ID", "PD_TITLE", "DEAL_TYPE", "DEAL_STATUS") AS 
  SELECT SUBSTR(DP.DELI_PD_ID, 6, 3) AS PD_NUM, DP.DELI_PD_ID AS PD_ID, PC.CATEGORY_NAME, DP.PD_REGIT_DATE PD_REGIT_DATE, DP.U_ID U_ID, DP.PD_TITLE PD_TITLE
,CASE
WHEN SUBSTR(DP.DELI_PD_ID, 1, 4) = 'deli'
THEN '택배거래'
ELSE '직거래'
END AS DEAL_TYPE
, CASE
WHEN DCS.SELL_COMP_DATE IS NOT NULL AND DCB.BUY_COMP_DATE IS NOT NULL
THEN '거래완료'
ELSE '거래중'
END AS DEAL_STATUS
FROM DELIVERY_PRODUCT DP LEFT JOIN PRODUCT_MAKER PM
ON DP.PD_MAKER_ID = PM.PD_MAKER_ID
LEFT JOIN PRODUCT_CATEGORY PC
ON PM.PD_CATEGORY_ID = PC.PD_CATEGORY_ID
LEFT JOIN BID_LIST BL
ON DP.DELI_PD_ID = BL.DELI_PD_ID
LEFT JOIN BID_SUCCESS BS
ON BL.BID_CODE = BS.BID_CODE
LEFT JOIN DELI_COMPLETE_SELL DCS
ON DCS.BS_ID = BS.BS_ID
LEFT JOIN DELI_COMPLETE_BUY DCB
ON DCB.BS_ID = BS.BS_ID
UNION ALL
-- 배송
SELECT SUBSTR(DP.DIRE_PD_ID, 6, 3) AS PD_NUM, DP.DIRE_PD_ID, PC.CATEGORY_NAME, DP.PD_REGIT_DATE PD_REGIT_DATE, DP.U_ID U_ID, DP.PD_TITLE PD_TITLE
,CASE
WHEN SUBSTR(DP.DIRE_PD_ID, 1, 4) = 'dire'
THEN '직거래'
ELSE '택배거래'
END AS deal_type
, CASE
WHEN DCS.SELL_COMP_DATE IS NOT NULL AND DCB.BUY_COMP_DATE IS NOT NULL
THEN '거래완료'
ELSE '거래중'
END AS deal_status
FROM DIRECT_PRODUCT DP LEFT JOIN SUGGEST_LIST SL
ON DP.DIRE_PD_ID = SL.DIRE_PD_ID
LEFT JOIN PRODUCT_MAKER PM
ON DP.PD_MAKER_ID = PM.PD_MAKER_ID
LEFT JOIN PRODUCT_CATEGORY PC
ON PM.PD_CATEGORY_ID = PC.PD_CATEGORY_ID
LEFT JOIN SELECTED S
ON SL.SUGGEST_CODE = S.SUGGEST_CODE
LEFT JOIN DIRE_COMPLETE_SELL DCS
ON DCS.SELECTED_ID = S.SELECTED_ID
LEFT OUTER JOIN DIRE_COMPLETE_BUY DCB
ON DCB.SELECTED_ID = S.SELECTED_ID
ORDER BY PD_REGIT_DATE DESC;

SELECT DELI_PD_ID AS PD_ID, PD_TITLE, NVL(BID_PRICE, PD_START_PRICE) AS PD_PRICE
, '택배(경매)' AS SYSTEM
, PD_REGIT_DATE, NULL AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM DELI_SELL_LIST
UNION
SELECT DIRE_PD_ID AS PD_ID, PD_TITLE, SUGGEST_PRICE AS PD_PRICE
, '직거래(제안거래)' AS SYSTEM
, PD_REGIT_DATE, SUGGEST_TIME AS TIME, COMP_DATE, SELLER_ID, BUYER_ID, SUGGEST_ADDR AS ADDRESS, STATUS
FROM DIRE_SELL_LIST;


SELECT PD_ID, PD_TITLE, SYSTEM, PD_REGIT_DATE, ADDRESS, STATUS
FROM MY_PRODUCT_LIST;


-- TEST
CREATE OR REPLACE VIEW PRODUCT_LIST_VIEW
AS
SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, DEAL_STATUS
FROM
(
SELECT DISTINCT PD_NUM, PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, DEAL_STATUS
, ROW_NUMBER() OVER(PARTITION BY PD_ID ORDER BY DEAL_STATUS ASC) AS RN
FROM TOTAL_PD_LIST_VIEW
ORDER BY DEAL_STATUS DESC, PD_REGIT_DATE DESC
)
WHERE RN=1;
 

-- 모든 상품 조회 뷰
CREATE OR REPLACE VIEW PRODUCTLIST_VIEW
AS
SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE
, DEAL_STATUS, PD_PRICE, SYSTEM, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM
(
SELECT PLV.PD_ID, CATEGORY_NAME, PLV.PD_REGIT_DATE, U_ID, PLV.PD_TITLE, DEAL_TYPE
, DEAL_STATUS, PD_PRICE, SYSTEM, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
, ROW_NUMBER() OVER(PARTITION BY MPL.PD_ID ORDER BY MPL.STATUS ASC) AS RN
FROM PRODUCT_LIST_VIEW PLV
    JOIN MY_PRODUCT_LIST MPL
    ON PLV.PD_ID = MPL.PD_ID
    ORDER BY DEAL_STATUS DESC, PD_REGIT_DATE DESC
)
WHERE RN=1;

-- 뷰TEST(상품 리스트 출력)
CREATE OR REPLACE VIEW PD_LIST_VIEW_TEST
AS
SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, DEAL_STATUS
, NVL(PD_PRICE, (SELECT PD_HOPEPRICE
                FROM DIRECT_PRODUCT
                WHERE DIRE_PD_ID = PV.PD_ID)) AS PD_PRICE, SYSTEM, TIME, COMP_DATE, SELLER_ID, BUYER_ID, ADDRESS, STATUS
FROM PRODUCTLIST_VIEW PV;

SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS
FROM PD_LIST_VIEW
WHERE PD_TITLE LIKE '%팝니다%';

CREATE OR REPLACE VIEW PD_LIST_VIEW
AS
SELECT PLV.PD_ID, PLV.CATEGORY_NAME, PLV.PD_REGIT_DATE, PLV.U_ID, PLV.PD_TITLE, PLV.DEAL_TYPE, PLV.PD_PRICE
        , PLV.SYSTEM, PLV.COMP_DATE, PLV.SELLER_ID, PLV.BUYER_ID, PLV.STATUS
     , NVL(DP1.PD_PHOTO,DP2.PD_PHOTO) AS PD_PHOTO
FROM PD_LIST_VIEW_TEST PLV
LEFT OUTER JOIN DELIVERY_PRODUCT DP1
ON PLV.PD_ID = DP1.DELI_PD_ID
LEFT OUTER JOIN DIRECT_PRODUCT DP2
ON PLV.PD_ID = DP2.DIRE_PD_ID
;

-- 최신순(기본)
SELECT PD_TITLE, PD_PRICE, SYSTEM, STATUS, PD_PHOTO
FROM PD_LIST_VIEW
WHERE PD_TITLE LIKE '%로지텍%';
        

-- 고가순
SELECT PD_TITLE, PD_PRICE, SYSTEM, STATUS, PD_PHOTO
FROM PD_LIST_VIEW
WHERE PD_TITLE LIKE '%로지텍%'
ORDER BY PD_PRICE DESC;

-- 저가순
SELECT PD_TITLE, PD_PRICE, SYSTEM, STATUS, PD_PHOTO
FROM PD_LIST_VIEW
WHERE PD_TITLE LIKE '%로지텍%'
ORDER BY PD_PRICE ASC;

-- 직거래만
SELECT PD_TITLE, PD_PRICE, SYSTEM, STATUS, PD_PHOTO
FROM PD_LIST_VIEW
WHERE PD_TITLE LIKE '%로지텍%' AND SYSTEM = '직거래(제안거래)';

-- 택배거래만
SELECT PD_TITLE, PD_PRICE, SYSTEM, STATUS, PD_PHOTO
FROM PD_LIST_VIEW
WHERE PD_TITLE LIKE '%로지텍%' AND SYSTEM = '택배(경매)';

--> 내정보확인/수정 쿼리문 수정
SELECT U_EMAIL, U_NICKNAME, U_NAME
        , LPAD('*',LENGTH(CRYPTPACK.DECRYPT(U_PASSWORD,'1234')),'*') as U_PASSWORD
		, U_TEL, U_ADDRESS
		FROM USER_INFORMATION
		WHERE U_ID = 'test1';
