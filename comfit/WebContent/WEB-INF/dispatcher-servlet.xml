<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	
	<!-- ① 기존코드 -->
	<!-- ※ Annotation 표기법으로 Controller 객체를 등록할 수 있도록 한다. -->
	<context:component-scan base-package="com.test.mybatis" />
	<context:component-scan base-package="com.test.util" />
	<!-- ③ mybatis 등록 과정에서 생겨나는 추가 코드 『2』 -->
	<!-- ※ mybatis 를 사용하기 위해 환경 설정을 추가하는 과정에서 -->
	<!--    필요한 dataSource 를 사용하기 위한 환경 설정 추가 -->
	<bean id="localDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@211.238.142.165:1521:xe"></property>
		<property name="username" value="comfit"></property>
		<property name="password" value="comfit006$"></property>
	</bean>
	
	<!-- ② mybatis 등록 과정에서 생겨나는 추가 코드 『1』 -->
	<!-- ※ mybatis 를 사용하기 위한 환경 설정 추가 -->
	<!-- → SqlSessionFactoryBean 등록 -->
	<!-- sqlsessionfactory는 datasource 와 mapper 의 위치를 속성값으로 필요로 한다 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- ④ dataSource 를 등록하고 와서 다시 추가 -->
		<property name="dataSource" ref="localDataSource"></property>
		<!-- ⑤ 매퍼 파일을 작성하고 와서 다시 추가 -->
		<property name="mapperLocations" value="classpath:com/test/mybatis/mapper/*.xml"></property>
	</bean>
	
	
	
	<!-- ⑥ mybatis 등록 과정에서 생겨나는 추가 코드 『3』 -->
	<!-- ※ sqlSession을 사용하기 위한 환경 설정 추가 -->
	<!--    → SqlSessionTemplate 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 메일 인증용 bean -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="minseongkimc@gmail.com" /> <!-- 자신의 이메일 아이디 -->
		<property name="password" value="llmpafsabfcwfqho" /> <!-- 자신의 비밀번호 -->
		<!-- 보안연결 TLS과 관련된 설정 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>
	

</beans>