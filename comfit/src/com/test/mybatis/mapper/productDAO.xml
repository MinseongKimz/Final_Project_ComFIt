<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ○ mapper 엘리먼트의 『namespace="패키지 경로가 포함된 인터페이스"』 -->
<!--    - 인터페이스 내부에 <<메소드명>>이 선언되어 있어야 한다. -->
<!--    - 이 ★<<메소드 명과 id="식별자"가 일치>>★해야 한다 -->
<mapper namespace="com.test.mybatis.IProduct">

	<!-- ○ 『id="식별자"』 속성 추가 -->
	<!--     - 인터페이스에 선언된 메소드의 이름과 일치해야 하며 -->
	<!--     호출 메소드명 역할을 수행하게 된다. -->
	
	<!-- ○ 『resultType="패키지 경로가 포함된 자료형 클래스"』 속성 추가 -->
	<!--    - string : java.lang.String
	        - byte : java.lang.Byte
	        - long : java.lang.Long
	        - short : java.lang.Short
	        - int : java.lang.Integer
	        - Integer : java.lang.Integer
	        - double : java.lang.Double
	        - float : java.lang.Float
	        - boolean : java.lang.Boolean
	        - decimal : java.math.BigDecimal
	        - Object : java.lang.Object
	        - map : java.util.Map
	        - hashmap : java.util.HashMap
	        - list : java.lang.List
	        - arraylist : java.util.Arraylist
	        - collection : java.util.Collection
	        - iterator : java.util.Iterator
	-->
	
	<!-- ○ 쿼리 내부에 있는 컬럼명의 정보가 -->
	<!--    자료형 클래스(DTO) 멤버 변수(속성)와 일치하는 경우 -->
	<!--    <<자동 매핑>>이 이루어진다. -->
	<!--    또한 SQL 문 내부에 세미콜론(;) 이 있으면 안된다. -->
	<select id="deli_check_id" resultType="java.lang.Integer">
	  SELECT COUNT(*) AS CHECK_ID
		FROM DELIVERY_PRODUCT
		WHERE U_ID = #{u_id} AND DELI_PD_ID = #{pd_id} 
	</select>
	
	<select id="dire_check_id" resultType="java.lang.Integer">
	  SELECT COUNT(*) AS CHECK_ID
		FROM DIRECT_PRODUCT
	   WHERE U_ID = #{u_id} AND DIRE_PD_ID = #{pd_id} 
	</select>
	
	<select id="user_pdList" resultType="com.test.mybatis.ProductDTO">
		  SELECT V.PD_ID AS PD_ID, V.PD_TITLE AS PD_TITLE, V.PRICE AS PRICE, V.DISTANCE AS DISTANCE, V.PD_PHOTO AS PD_PHOTO
			FROM
			(
			SELECT PD_ID, PD_NAME, PRICE, PD_PHOTO, PD_TITLE
			     , ROUND(DISTANCE_WGS84(LAT, LON, #{lat}, #{lon}), 2) AS DISTANCE
			FROM DIRE_PD_NEAR_VIEW
			) V
			ORDER BY V.DISTANCE
	</select>
	<select id="deli_user_pdList" resultType="com.test.mybatis.ProductDTO">
		  SELECT PD_ID, PD_TITLE, PRICE, PD_REGIT_DATE, PD_PHOTO
		    FROM DELI_PD_LIST_REALVIEW
	</select>
	<select id="cateList" resultType="com.test.mybatis.CategoryDTO">
		SELECT PD_CATEGORY_ID, CATEGORY_NAME
		FROM PRODUCT_CATEGORY
	</select>

	
	
	
	<select id="drPdList" resultType="com.test.mybatis.DirectProductDTO">
		SELECT PD_ID, PD_TITLE, PD_NAME, PD_PHOTO, PD_AS_REMAIN, PD_HITCOUNT, PRICE
		     , SUBSTR(TO_CHAR(PD_HOPE_SDATE, 'YYYY-MM-DD'), 1, 10) AS PD_HOPE_SDATE, SUBSTR(TO_CHAR(PD_HOPE_EDATE, 'YYYY-MM-DD'), 1, 10) AS PD_HOPE_EDATE
		     , PD_HOPE_STIME, PD_HOPE_ETIME, PD_HOPE_PLACE
		     , PD_REGIT_DATE, PD_MAKER_ID, PD_AS_ID, PD_AS_NAME, CATEGORY_NAME, SELLER
		     , U_NICKNAME, MAKER_NAME, MAKER_NAME2, CF_PRICE, COMMENTS
		     , PD_HOPE_EDATE + ROUND(TO_NUMBER(SUBSTR(PD_HOPE_ETIME, 1, 2)-4)/24, 10) AS REMAIN_DATE
		     , PROFILE
		FROM DIRE_PD_LIST_REALVIEW
		WHERE PD_ID =  #{pd_id}
	</select>
	<select id="dlPdList" resultType="com.test.mybatis.DeliveryProductDTO">
		SELECT PD_ID, PD_TITLE, PD_NAME, PD_PHOTO, PD_AS_REMAIN, PD_HITCOUNT, PRICE
		     , PD_REGIT_DATE, PD_MAKER_ID, PD_AS_ID, PD_AS_NAME, CATEGORY_NAME, SELLER
		     , U_NICKNAME, MAKER_NAME, MAKER_NAME2, CF_PRICE, COMMENTS, IMDPRICE, (PD_REGIT_DATE+5) AS REMAIN_DATE 
             , PROFILE
		FROM DELI_PD_LIST_REALVIEW 
		WHERE PD_ID = #{pd_id}
	</select>
	
	<select  id="end_date" resultType="java.lang.Integer">
		SELECT  ROUND(REMAIN_DATE-SYSDATE) AS END_DATE
		 FROM
			(
			SELECT (PD_REGIT_DATE+5) AS REMAIN_DATE
			  FROM DELI_PD_LIST_REALVIEW
			 WHERE PD_ID = #{pd_id}
			)
		
	</select>
	<select id="ub_Check" resultType="java.lang.Integer">
		SELECT COUNT(*) AS UB_CHECK
		 FROM BID_LIST 
	 	 WHERE DELI_PD_ID = #{pd_id} AND U_ID = #{u_id}
	</select>
	
	<select id="search_pdListDefault" resultType="com.test.mybatis.ProductDTO">
	SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS, PD_PHOTO
	FROM PRODUCT_LIST_VIEW2
	WHERE BLIND = 'NOT'
	AND PD_TITLE LIKE #{searchKey}
	ORDER BY COMP_DATE DESC
	, STATUS DESC
	</select>
	
	<select id="search_pdListPriceH" resultType="com.test.mybatis.ProductDTO">
	SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS, PD_PHOTO
	FROM PRODUCT_LIST_VIEW2
	WHERE BLIND = 'NOT'
	AND PD_TITLE LIKE #{searchKey}
	ORDER BY COMP_DATE DESC
	, STATUS DESC
	, PD_PRICE DESC
	</select>
	
	<select id="search_pdListPriceL" resultType="com.test.mybatis.ProductDTO">
	SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS, PD_PHOTO
	FROM PRODUCT_LIST_VIEW2
	WHERE BLIND = 'NOT'
	AND PD_TITLE LIKE #{searchKey}
	ORDER BY COMP_DATE DESC
	, STATUS DESC
	, PD_PRICE ASC
	</select>
	
	<select id="search_pdListDirect" resultType="com.test.mybatis.ProductDTO">
	SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS, PD_PHOTO
	FROM PRODUCT_LIST_VIEW2
	WHERE BLIND = 'NOT'
	AND PD_TITLE LIKE #{searchKey}
	AND SYSTEM = '직거래(제안거래)'
	ORDER BY COMP_DATE DESC
	, STATUS DESC
	</select>
	
	<select id="search_pdListDelivery" resultType="com.test.mybatis.ProductDTO">
	SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS, PD_PHOTO
	FROM PRODUCT_LIST_VIEW2
	WHERE BLIND = 'NOT'
	AND PD_TITLE LIKE #{searchKey}
	AND SYSTEM = '택배(경매)'
	ORDER BY COMP_DATE DESC
	, STATUS DESC
	</select>
	
	<select id="categorySelect" resultType="com.test.mybatis.ProductDTO">
	SELECT PD_ID, CATEGORY_NAME, PD_REGIT_DATE, U_ID, PD_TITLE, DEAL_TYPE, PD_PRICE, SYSTEM, COMP_DATE, SELLER_ID, BUYER_ID, STATUS, PD_PHOTO
	FROM PRODUCT_LIST_VIEW2
	WHERE BLIND = 'NOT'
	AND CATEGORY_NAME = #{categoryName}
	ORDER BY COMP_DATE DESC
	, STATUS DESC
	</select>
	
	<select  id="bidList" resultType="com.test.mybatis.BidListDTO">
		SELECT BID_CODE, U_NICKNAME, PRICE, BID_DATE, ADDRESS, PROFILE
		FROM BID_LIST_REALVIEW
		WHERE DELI_PD_ID = #{pd_id}
		ORDER BY PRICE DESC
	</select>
	
	<select  id="buy_count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS BUY_COUNT
	     FROM BID_SUCCESS BS JOIN BID_LIST BL
              ON BS.BID_CODE = BL.BID_CODE
	          WHERE BL.DELI_PD_ID = #{pd_id}
	</select>
	<select id="suggestList" resultType="com.test.mybatis.SuggestListDTO">
		SELECT SUGGEST_CODE, U_NICKNAME, PRICE, SUGGEST_TIME, SUGGEST_PLACE, PLACE_DETAIL, SUGGEST_DATE, PROFILE
	  	  FROM SUGGEST_LIST_REALVIEW
		 WHERE DIRE_PD_ID = #{pd_id}
	</select>	

	<select id="deliuserId" resultType="java.lang.String">
		SELECT U_ID
		  FROM DELIVERY_PRODUCT
		 WHERE DELI_PD_ID = #{pd_id}
	</select>
	<select id="direuserId" resultType="java.lang.String">
		SELECT U_ID
		  FROM DIRECT_PRODUCT
		 WHERE DIRE_PD_ID = #{pd_id}
	</select>
	
	<select id="userLevel" resultType="java.lang.Integer">
		SELECT CASE TRUNC(SQRT((SUM(USER_EXP))/2))
	    WHEN 0
	    THEN 1
	    ELSE TRUNC(SQRT((SUM(USER_EXP))/2)) 
	    END AS USER_LEVEL
		FROM USER_LEVEL_VIEW2
		WHERE U_ID = #{u_id}
	</select>
	
	<select id="sellCount" resultType="java.lang.Integer">
	SELECT COUNT(*) AS SELL_COUNT
 	  FROM USER_SELL_COUNT_VIEW
	  WHERE U_ID = #{userId}
	</select>
	
	<select id="non_user_pdList" resultType="com.test.mybatis.ProductDTO">
		SELECT PD_ID, PD_TITLE, PRICE, PD_PHOTO
	 	FROM PD_LIST_MAIN_VIEW
	    ORDER BY PD_REGIT_DATE 
	</select>
	
	<select id="mgrs" resultType="com.test.mybatis.DirectProductDTO">
	SELECT LAT, LON, PD_ID
	 FROM MGRS_VIEW
	WHERE PD_ID = #{pd_id}
	</select>
	
	<insert id="selectSuggest">
		INSERT INTO SELECTED(SELECTED_ID, BUYER_CODE, SELLER_CODE, SUGGEST_CODE)
			   VALUES(CONCAT('sel_',TO_CHAR(SELECTED_SEQ.NEXTVAL+1))
            , CONCAT(DBMS_RANDOM.STRING('X', 8), DBMS_RANDOM.STRING('U', 8))
            , CONCAT(DBMS_RANDOM.STRING('X', 8), DBMS_RANDOM.STRING('L', 8))
            , #{suggest_code})
	</insert>
	<select  id="selCheck" resultType="java.lang.Integer">
		SELECT COUNT(*) SELCHECK
		  FROM SELECT_CHECK_VIEW
		 WHERE PD_ID = #{pd_id}
	</select>
	<select  id="sugCheck" resultType="java.lang.String">
		SELECT DISTINCT(SUGGEST_CODE)
	     FROM SELECT_CHECK_VIEW
	    WHERE PD_ID = #{pd_id}
	</select>

	
	<insert id="confirmDeliveryBuy">
		INSERT INTO DELI_COMPLETE_BUY(DELI_COMP_SELL_ID, REVIEW, BS_ID)
		VALUES(CONCAT('dcbuy_', DELI_COMPLETE_SEQ.NEXTVAL), #{review}, #{bs_id})
	</insert>
	
	<insert id="confirmDeliverySell">
		INSERT INTO DELI_COMPLETE_SELL(DELI_COMP_SELL_ID, PD_DELI_NUM, REVIEW, BS_ID)
		VALUES(CONCAT('dcsell_', DELI_COMPLETE_SELL_SEQ.NEXTVAL), #{deli_num}, #{review}, #{bs_id})
	</insert>

	<select id="slCheck" resultType="java.lang.Integer">
		SELECT COUNT(*) AS SL_CHECK
		 FROM SUGGEST_LIST
		WHERE DIRE_PD_ID = #{pd_id}
	</select>
	<select  id="usCheck" resultType="java.lang.Integer">
	SELECT COUNT(*) AS US_CHECK
	  FROM SUGGEST_LIST
	 WHERE DIRE_PD_ID = #{pd_id} AND U_ID = #{pd_id}
	</select>
	<insert id="add_buy">
		INSERT INTO BID_SUCCESS(BS_ID, BID_CODE)
	    VALUES(CONCAT('bs_', BS_SEQ.NEXTVAL), #{bid_code})
	</insert>
	<select id="bsCheck" resultType="java.lang.Integer">
		SELECT COUNT(*) AS BS_COUNT
		 FROM BID_SUCCESS BS JOIN BID_LIST BL
     		  ON BS.BID_CODE = BL.BID_CODE
		WHERE BL.DELI_PD_ID = #{pd_id} AND BL.U_ID = #{u_id}
	</select>
	<select id="final_price" resultType="java.lang.Integer">
	SELECT BL.BID_PRICE AS FINAL_PRICE
	 FROM BID_SUCCESS BS JOIN BID_LIST BL
       ON BS.BID_CODE = BL.BID_CODE
	WHERE BL.DELI_PD_ID = #{pd_id}
	</select>
	<select id="end_day" resultType="java.lang.Integer">
		SELECT ROUND(PD_HOPE_EDATE - SYSDATE) AS END_DATE
		  FROM DIRECT_PRODUCT
		 WHERE DIRE_PD_ID = #{pd_id}
	</select>
</mapper>









